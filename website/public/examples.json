{
  "examples": [
    {
      "name": "Sparky Multi-Scale",
      "code": "stack(\n  note(\"<[0,2,4]*2>\")\n    .struct(\"[x ~]*4\")\n    .scale(\"<c#4:major [f#4:major b3:major] [g#4:minor e4:major]>\")\n    .s(\"recorder_bass_sus\").gain(1.5).release(0.5),\n  note(\"<[4 2 0 4]*2>\")\n    .scale(\"<c#4:major [f#4:major b3:major] [g#4:minor e4:major]>\")\n    .transpose(-12)\n    .s(\"gtr\").room(1).gain(0.20).release(0.3),\n  s(\"[sd,hh*2]!4\").bank(\"AlesisHR16\").gain(0.08)\n).cpm(120/4)",
      "description": "Changing scales with guitar and synth layers (from Sparky)",
      "category": "experimental",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "sparky.js",
      "tags": ["scales", "guitar", "modulation", "experimental"]
    },
    {
      "name": "Aztec Challenge",
      "code": "stack(\n  n(\"<0>/32\").scale('a1:minor')\n    .s('gm_lead_2_sawtooth').lpf(4000).gain(0.9),\n  n(\"<-7>/32\").scale('a2:minor')\n    .s('sawtooth').lpf(3000),\n  n(\"<-14@5 [4 7]*5 4@2>/4\").scale('a4:minor')\n    .s(\"<triangle@17 sawtooth@8>/16\")\n).cpm(180)",
      "description": "C64 game music with SID-style sawtooth leads (Aztec Challenge by Paul Norman)",
      "category": "chiptune",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "aztecchallenge.js",
      "tags": ["c64", "chiptune", "gamemusic", "sid", "paulnorman"]
    },
    {
      "name": "Jitterbug Coda",
      "code": "stack(\n  note(\"f#4@3 d4@4 g4@6 g#4@4 f4@3 d#4@3 e4@4 c#4@6\").slow(82/8)\n    .s(\"gm_lead_1_square\")\n    .attack(0.02).sustain(1.5).lpf(1200).gain(0.75),\n  chord(\"<D@2 G@2 C D#@2 G#@2 C# B@2 E@2>\".slow(40/4))\n    .anchor(\"G5\").voicing()\n    .s(\"gm_pad_choir\").echo(2,1/6,.7).gain(0.8),\n  s(\"<rd*4>\").bank('LinnDrum').gain(0.07)\n).cpm(115/4).room(0.91)",
      "description": "Complex melody with chord voicings (from Jitterbug by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "jitterbug.js",
      "tags": ["cardiacs", "progressive", "melody", "voicing", "complex"]
    },
    {
      "name": "Cardiacs Cadenza",
      "code": "stack(\n  chord(\"<G@3 Bm E@3 G#m C#@3 Fm A#@3 Dm>\")\n    .anchor(\"G4\".transpose(\"<3 0 -3 0>\"))\n    .voicing().struct(\"x\")\n    .piano().gain(cosine.segment(16).range(0.5,1).slow(8)),\n  chord(\"<G@3 Bm E@3 G#m C#@3 Fm A#@3 Dm>\")\n    .anchor(\"B5\".transpose(\"<0 -3 6 3>/16\"))\n    .voicing().s(\"gm_drawbar_organ\").gain(0.8),\n  note(\"<G2 E2 C#2 A#2>/4\".transpose(\"<0 <-12 -8>>\"))\n    .struct(\"x!2\").lpf(180)\n    .s(\"gm_electric_bass_finger\").gain(1)\n).cpm(120/2).room(0.5)",
      "description": "Magic chord progression with dynamic voicings (The Cardiacs Cadence)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "cadenza.js",
      "tags": ["cardiacs", "progressive", "chords", "voicing", "magic"]
    },
    {
      "name": "Bye Bye Spirit",
      "code": "stack(\n  chord(\"<Cm A# D# D E F C A E G# C# Cm F Cm F>\")\n    .anchor(\"e4\".add(\"<~ -2 2>*3\"))\n    .voicing().struct(\"<~ x x>*3\")\n    .piano().room(0.8).gain(0.4),\n  note(\"<c2 a#1 d#2 d2 e2 f2 c2 a1 e2 g#1 c#2 c2 f2 c2 f2>\")\n    .piano().room(.8).gain(0.6),\n  note(\"<g4@2 ~ a#4@2 ~ g4@2 ~ f#4 d4 a3 g#3 b3 e4>*3\")\n    .transpose(12).s('triangle')\n    .attack(0.05).release(0.2).gain(0.4).vmod(0.10).v(5)\n).cpm(140*3/4/3)",
      "description": "Progressive arrangement with chord voicings (from Bye Bye Spirit by The Sea Nymphs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "byebyespirit.js",
      "tags": ["seanymphs", "progressive", "voicing", "chords", "complex"]
    },
    {
      "name": "Human Performance",
      "code": "stack(\n  n(\"<[0,[~ 1@40],[~@2 2@40],[~@3 3@40]]@2>\")\n    .chord(\"<B@2 F#m@2 E@2 D@2 D A@2>\")\n    .anchor('e3').voicing()\n    .s(\"gm_electric_guitar_clean:2\").lpf(1800).gain(.7),\n  n(\"<1 [4b 4] 5 [2 5] 4 [1 4] [3@3 3] [0@3 0]>\")\n    .scale(\"a2:major\")\n    .s(\"gm_electric_bass_finger:3\").clip(.97).lpf(350),\n  s(\"<rd*4,[bd sd]>\").speed(.94).gain(.6)\n).room(.3).cpm(110/2)",
      "description": "Indie rock with guitar chords and bass (from Human Performance by Parquet Courts)",
      "category": "rock",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "humanperformance.js",
      "tags": ["parquetcourts", "indie", "rock", "guitar", "bass"]
    },
    {
      "name": "O'Malley Underdog",
      "code": "stack(\n  n(\"<~ 0 1 2 3 4 5 6 7 4 5 6 7 8 9 10 11>*8\".sub(7))\n    .scale(\"g3:major\")\n    .s(\"gm_lead_1_square\")\n    .room(0.4).delay(0.4).dfb(0.3).dt(60/128).gain(0.65),\n  chord(\"<C@2 D@2 [[C ~]!3 D@2 [D ~] D@2]@2 G@2>\")\n    .anchor(\"A4\").voicing()\n    .s(\"gm_lead_8_bass_lead\").gain(0.5),\n  s(\"hh*2\").bank(\"RolandTR909\").gain(0.2)\n).cpm(147/2)",
      "description": "Indie rock with square lead and chord voicings (from O'Malley by Deerhoof)",
      "category": "indie",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "omalley.js",
      "tags": ["deerhoof", "indie", "rock", "square", "delay"]
    },
    {
      "name": "Breakfast Line Theme",
      "code": "stack(\n  note(\"[c#6@2 f5 c6@3 a#5 a5@2 g5@3 c#5 e5@2]/24\").clip(0.93)\n    .transpose(0).s('gm_overdriven_guitar').pan(0.45).gain(0.70),\n  note(\"[c#6@2 f5 c6@3 a#5 a5@2 g5@3 c#5 e5@2]/24\").clip(0.93)\n    .transpose(-12).s('gm_overdriven_guitar').pan(0.55).gain(0.80),\n  note(\"<C#4 D#4 F4 G4 A3 B3>*2\".add(\"[0,4,-5]\"))\n    .s('gm_string_ensemble_2').gain(0.6),\n  s(\"<[bd ~ bd sd ~ bd]!23 [sd*6]>\").bank(\"AkaiLinn\").gain(0.30)\n).cpm(76/2).room(0.6)",
      "description": "Overdriven guitar with octave doubling (from The Breakfast Line by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "breakfastline.js",
      "tags": ["cardiacs", "progressive", "guitar", "overdrive", "octave"]
    },
    {
      "name": "Cinghiale Bianco",
      "code": "stack(\n  n(\"<[7 6 5 6 7 5 6 7]!2>\".add(\"<0 1>\"))\n    .scale(\"c4:major\")\n    .transpose(\"<[0 -5]@16 [[0@7 -5@8]!2]@14>\")\n    .s(\"sawtooth\").vib(5).vmod(0.1)\n    .clip(0.85).attack(0.05).release(0.1).gain(0.6),\n  chord(\"<[Am G C@2]!2 [Em D G@2]!2>/4\")\n    .anchor(\"C4\").voicing()\n    .s(\"triangle\").lpf(1200).attack(0.01).gain(0.35),\n  s(\"[[bd <~!7 bd>] sd],<hh!31 oh>*4\")\n    .bank(\"YamahaRY30\").clip(1).gain(0.4)\n).cpm(127/2).room(0.4)",
      "description": "Italian progressive with vibrato synth (L'Era Del Cinghiale Bianco by Franco Battiato)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "cinghiale.js",
      "tags": ["battiato", "italian", "progressive", "vibrato", "80s"]
    },
    {
      "name": "Happy Birthday Song",
      "code": "stack(\n  note(\"[C4@3 C4] D4 C4 F4 E4@2 [C4@3 C4] D4 C4 G4 F4@2\").slow(8)\n    .early(1/3)\n    .s(\"gm_harmonica\").gain(0.4),\n  chord(\"F@3 C@6 F@6 Bb@3 F@2 C F@3\".slow(8))\n    .anchor(\"G4\").struct(\"x*3\").voicing()\n    .piano().gain(0.2),\n  n(\"2 ~ ~ 2 1 ~\")\n    .chord(\"F@3 C@6 F@6 Bb@3 F@2 C F@3\".slow(8))\n    .s(\"gm_electric_bass_finger\").lpf(190).gain(1),\n  s(\"hh*3, <bd ~>, ~ ~ rim\").bank(\"KorgDDM110\").gain(0.2)\n).cpm(120/4).room(0.3)",
      "description": "Classic Happy Birthday with harmonica and voicings",
      "category": "traditional",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "happybirthday.js",
      "tags": ["happybirthday", "traditional", "harmonica", "voicing"]
    },
    {
      "name": "Appealing to Venus",
      "code": "stack(\n  note(\"<c5 d5@2 eb5 d5@3 c5@2 g#4@3 eb5@8>*3\")\n    .clip(0.95).s('gm_oboe').gain(0.5),\n  chord(\"<Cm@2 Ab@2 Db@2 Cm F Bb C@2 F Bb C@2>/2\")\n    .rootNotes(2).s('gm_bassoon').lpf(400).gain(0.5),\n  chord(\"<Cm@2 Ab@2 Db@2 Cm F Bb C@2 F Bb C@2>/2\")\n    .anchor(\"C5\").voicing().struct(\"x\")\n    .piano().gain(0.4),\n  chord(\"<Cm@2 Ab@2 Db@2 Cm F Bb C@2 F Bb C@2>/2\")\n    .anchor(\"E5\").voicing()\n    .s('gm_drawbar_organ').gain(0.15)\n).cpm(120).room(0.5)",
      "description": "Chamber progressive with oboe and organ (from Appealing to Venus by The Sea Nymphs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "appealingtovenus.js",
      "tags": ["seanymphs", "progressive", "oboe", "organ", "chamber"]
    },
    {
      "name": "Il Re Del Mondo",
      "code": "stack(\n  note(\"[4 5 6 7]*2\").scale(\"<e:major e:minor>\".slow(2.5))\n    .piano().gain(0.2),\n  note(\"<0@4 [7 ~]!2 0@3 7@2 ~ 7 ~ 0@3 7@3>/2.5\")\n    .scale(\"<e:major e:minor>\".slow(2.5))\n    .transpose(-12).s(\"triangle\").clip(1).release(0.1),\n  note(\"<[-3@3 -2 -1@3 0 -1@8 0@3 1 2@3 3 2@8]/14>\")\n    .scale(\"[e:major e:minor]!3 [e:major]@0.5\".slow(14))\n    .transpose(12).s(\"sax\").gain(0.3).clip(1).release(0.5),\n  s(\"[[bd [sd [~ bd]] [bd bd] sd,hh!7 oh]]/14\")\n    .bank(\"YamahaRY30\").clip(1).gain(0.08)\n).cpm(91/4)",
      "description": "Italian progressive with sax and modal changes (from Il Re Del Mondo by Franco Battiato)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "ilredelmondo.js",
      "tags": ["battiato", "italian", "progressive", "sax", "modal"]
    },
    {
      "name": "Made All Up",
      "code": "stack(\n  chord(\"<C!2 [C B] B [B D] D!2 F!2 [F C] C [C D#] D#>\")\n    .anchor(\"<b4@7 b4@6 b4@5 c5@6 d5@7 c#5@7>\")\n    .voicing().s(\"gm_piano\").room(.4).gain(.9)\n    .superimpose(x => x.late(0.1).attack(.1).velocity(.7)),\n  n(\"<0>/8\").chord(\"<C!2 [C B] B [B D] D!2>\")\n    .mode('root').anchor('e2').voicing()\n    .s(\"gm_electric_bass_finger\").lpf(200).gain(1.4),\n  note(\"<c4@2 c4!3 b3 b3@2 b3 a3 [a3!2]@4>*2\")\n    .adsr([0,.1,.8,0]).clip(\"0.92\")\n    .s(\"triangle\").gain(0.9).lpf(5000),\n  s(\"<cr,<bd [sd@3 sd] [bd bd] sd [bd bd] [sd bd] sd>>\")\n    .bank(\"Linn9000\").room(0.4).gain(0.5)\n).cpm(138)",
      "description": "Complex progressive with piano voicings and choir (from Made All Up by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "madeallup.js",
      "tags": ["cardiacs", "progressive", "piano", "voicing", "complex"]
    },
    {
      "name": "Classical Arpeggio",
      "code": "// From \"low Effort, high Satie'sfaction\" by eefano\nstack(\n  n(\"<0 1 2 [1 3 4] 5 4 [6 2 3] 1 4 0>/3\".add(\"<7@24 14>/17\")),\n  n(\"<[3,5,9] [2,5,9] [2,4,9]>/3\".sub(7)).gain(\"<.35 .45 .25 .35>\"),\n  n(\"<[5@3 4] 5>/8\".sub(14).gain(\"<.7@9 .8>/10\"))\n)\n  .scale(\"<b3:lydian c#4:locrian>/48\")\n  .s(\"piano\")\n  .postgain(sine.mul(.3).add(1.2).segment(48).slow(48 * 7))\n  .room(\".8\")\n  .clip(1)\n  .cpm(185)",
      "description": "Satie-inspired piano with lydian and locrian modes",
      "category": "classical",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["classical", "piano", "modal"]
    },
    {
      "name": "Punk Rock",
      "code": "// From \"Happy Birthday\" by Ramones (simplified)\nsetDefaultVoicings('legacy')\nconst chrds = \"F@3 C@6 F@6 Bb@3 F@2 C F@3\".slow(8);\nstack(\n  // Distorted power chords\n  n(\"0,2\")\n    .chord(chrds)\n    .anchor(\"E3\")\n    .mode('root')\n    .struct(\"[[x ~]*2 x*2]*2\")\n    .voicing()\n    .s(\"gm_distortion_guitar\")\n    .clip(0.95)\n    .gain(0.7),\n  // Bass root notes\n  n(\"0\")\n    .chord(chrds)\n    .anchor(\"E2\")\n    .mode('root')\n    .voicing()\n    .s(\"gm_electric_bass_finger\")\n    .lpf(190)\n    .gain(1),\n  // Fast punk drums\n  s(\"oh*4, <bd!3 [bd*2 ~]>*2, [~ sd]*2\")\n    .bank(\"Linn9000\")\n    .gain(0.15)\n).cpm(200/4).room(0.3)",
      "description": "Fast punk rock with power chords and driving drums",
      "category": "rock",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["punk", "rock", "distorted"]
    },
    {
      "name": "Bennington Ambient",
      "code": "stack(\n  n(\"<7!3 [4 6] 7*2 7!2 6 9!3 [6 9] 11*2 11!2 10>*4\")\n    .scale('c1:minor').s('sawtooth')\n    .clip(.95).lpf(300).lpe(1).gain(.9),\n  n(\"<~ [4,7,9]@3 ~@4>*2\")\n    .scale('c5:minor').s('sawtooth')\n    .vib(4.5).vibmod(.4).gain(.55).room(.8),\n  n(\"<[2,4,6] [-3,-1,1]>/2\")\n    .scale('c4:minor').s('gm_pad_warm')\n    .lpf(1500).att(.4).rel(.5).gain(.7)\n).cpm(135/4).room(.4)",
      "description": "Ambient synth layers with vibrato (from Bennington by John Maus)",
      "category": "ambient",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "bennington.js",
      "tags": ["johnmaus", "ambient", "synth", "vibrato", "layers"]
    },
    {
      "name": "Odd Even",
      "code": "stack(\n  n(stack(\"0@2 0 3@2 3 0 3\",\n         \"1@2 1 2@2 2 1 2\".late(0.01),\n         \"2@2 2 1@2 1 2 1\".late(0.02),\n         \"3@2 3 0@2 0 3 0\".late(0.03)))\n    .chord(\"<G [Bm E] [G@3 C]>\".slow(2))\n    .voicing()\n    .s(\"gm_electric_guitar_jazz\")\n    .clip(1).release(0.2).gain(0.5),\n  note(\"<~!4 [4 3 [2 ~] [1 ~] 0@2 4@2] [4 3 [2 ~] [1 ~] 0@2 7@2]>\")\n    .scale(\"g2:lydian\")\n    .s(\"gm_bassoon\")\n).cpm(120/4)",
      "description": "Polyrhythmic jazz guitar with staggered timing (from Odd Even by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "oddeven.js",
      "tags": ["cardiacs", "progressive", "polyrhythm", "jazz", "guitar"]
    },
    {
      "name": "Mammals Chilling",
      "code": "stack(\n  n(\"<~ [<0@2 2 1>@3 ~]>*2\")\n    .chord(\"<F Em7 C D7>\")\n    .anchor(\"<f3 b3 f3 g3>\".transpose(-22))\n    .mode('above').voicing()\n    .s(\"gm_pizzicato_strings:4\").gain(1.35),\n  n(\"<[[0,[~ 1@40],[~@2 2@40],[~@3 3@40]] ~@2]>/2\")\n    .chord(\"<F Em7 C D7>\")\n    .anchor(\"<f3 b3 f3 g3>\")\n    .mode('above').voicing()\n    .s(\"gm_acoustic_guitar_nylon\").gain(.65),\n  n(\"<~ 4 0 ~ 1 0 ~ 1 2*3 ~@2 5 5 6 ~ 2 ~ 5 2 5>*2\")\n    .scale('f4:major').s(\"gm_marimba\").gain(.65),\n  s(\"<sh ~ sk sh ~ sk sh sk ~ sh sk ~ sh ~ sk sh ~ sk sh sk>*2\")\n    .velocity(3).gain(1)\n).room(.2).cpm(155)",
      "description": "Latin-influenced with pizzicato strings and marimba (Mammals Chilling by eefano)",
      "category": "latin",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "mammalschilling.js",
      "tags": ["eefano", "latin", "marimba", "pizzicato", "guitar"]
    },
    {
      "name": "Il Vento Caldo",
      "code": "stack(\n  note(\"<0 4 7 8 10 11 9 12 14 12>*2\")\n    .scale(\"c#4:major\")\n    .s(\"gm_drawbar_organ:4\").room(.3).lpf(1200).gain(0.7),\n  note(\"<[c#2:1!22 [c#2:.8 c#2:.9]] <c#3:1!6 [c#3:.8 c#3:.9]>>\")\n    .clip(.6).s(\"gm_electric_bass_finger:2\").lpf(400).gain(1.5),\n  note(\"<c#4 d#4@2 c#4@2 [c4 c#4] [d#4 f4] c#4@2 d#4@2>\")\n    .s(\"gm_oboe\").gain(1.7).lpf(3000).release(.1),\n  s(\"<bd,hh>\").bank(\"Linn9000\").room(0.2).gain(0.8)\n).cpm(115)",
      "description": "Italian progressive with organ and oboe (from Il Vento Caldo Dell'Estate by Alice)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "ventocaldo.js",
      "tags": ["alice", "italian", "progressive", "organ", "oboe"]
    },
    {
      "name": "Another Satellite",
      "code": "stack(\n  note(\"<bb2@7 eb3>/2\").s('gtr')\n    .begin(.045).end(.5).clip(1).gain(.9).room(2),\n  note(\"<d4:.7!3 d4:1 c4:.7!4 ~ f4 ~ d4@2:1 c4:1 bb3>*2\")\n    .clip(.9).penv(0).patt('.2')\n    .s('gm_oboe').lpf(30000).room(.5).gain(1.7),\n  s(\"<hh*2>\").bank(\"RolandMT32\").gain(.05).room(.2),\n  s(\"<bd ~ ~ <bd ~>>*2\").bank(\"RolandMT32\").gain(\"<0.4 0.2>\").room(.2)\n).cpm(119)",
      "description": "New wave with guitar and oboe (from Another Satellite by XTC)",
      "category": "newwave",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "anothersatellite.js",
      "tags": ["xtc", "newwave", "80s", "guitar", "oboe"]
    },
    {
      "name": "Hey Moon",
      "code": "stack(\n  n(\"<~ 1 2 3>*2\")\n    .chord(\"<F C G F>/2\")\n    .anchor(\"<F4 C4 G4 F4>/2\")\n    .voicing().s(\"gm_pad_warm\").release(2).room(0.6).gain(0.6),\n  note(\"<~!14 3 1 3@2 ~@4 0 5 4 4 4 [5 3@3]@2 ~!5 [1 0] -1b 0@2>*2\")\n    .scale(\"g4:major\")\n    .s(\"gm_piccolo\").pan(0.4).room(1).gain(0.5),\n  note(\"<~!14 3 1 3@2 ~@4 0 5 4 4 4 [5 3@3]@2 ~!5 [1 0] -1b 0@2>*2\")\n    .scale(\"g2:major\")\n    .s(\"supersaw\").pan(0.6).room(1).gain(0.6),\n  s(\"<hh*2>\").gain(0.3).room(1)\n).cpm(88)",
      "description": "Minimal synth pop with piccolo and pads (from Hey Moon by John Maus)",
      "category": "synthpop",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "heymoon.js",
      "tags": ["johnmaus", "synthpop", "minimal", "piccolo", "ambient"]
    },
    {
      "name": "Epic Biopic",
      "code": "stack(\n  chord(\"<B@3 Am F F# C#@2 E@2 Fm@4 F#@2 A#@4>\")\n    .anchor('c5').voicing()\n    .s(\"supersaw\").lpf(5000).velocity(.9).gain(.75),\n  n(\"<-1 [0 1]*3 0 1 0*3>\").chord(\"<B@3 Am F F# C#@2 E@2>\")\n    .mode('root').anchor('g2').voicing()\n    .clip(.97).s(\"square\").gain(.85),\n  s(\"<[mt mt lt] lt [lt mt lt]>\").bank(\"BossDR550\")\n    .lpf(\"<800@2 1200@2 2400>\").speed(.7).gain(.45)\n).room(1.4).cpm(120)",
      "description": "Epic cinematic with saw synths and tuba bass (Epic Biopic by eefano)",
      "category": "cinematic",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "epicbiopic.js",
      "tags": ["eefano", "cinematic", "epic", "synth", "orchestral"]
    },
    {
      "name": "Love Goes On",
      "code": "stack(\n  note(\"<2 2@2 2@2 2 2 2@2 1@2 ~@5 3 3@2 3@2 1 1@2 2@2>*2\")\n    .scale(\"a3:minor\").clip(0.95)\n    .s(\"gm_bassoon:2\").gain(1).room(0.4),\n  chord(\"<Am Em Bm C G Em D C>/4\")\n    .s(\"gm_acoustic_guitar_steel:2\")\n    .clip(1).release(0.4).gain(0.4).room(0.6)\n).cpm(150)",
      "description": "Indie pop with bassoon and acoustic guitar (from Love Goes On by The Go-Betweens)",
      "category": "indie",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "lovegoeson.js",
      "tags": ["gobetweens", "indie", "bassoon", "guitar", "pop"]
    },
    {
      "name": "Oh",
      "code": "stack(\n  note(\"[d#5@4 d#5@2 d#5@3 e5 c#5@2 d5 d5@2 c#5 b4@4 c#5 b4@4]\")\n    .s('gm_piccolo').velocity(.9).gain(0.8),\n  chord(\"<G#@4 F#@2 B@3 E A@2 D G@2 A G@4>\")\n    .anchor(\"C4\".transpose(run(12)))\n    .voicing()\n    .s('gm_choir_aahs').velocity(.8).gain(0.7),\n  chord(\"<G#@4 F#@2 B@3 E A@2 D G@2 A G@4>\")\n    .anchor(\"C5\".transpose(run(12)))\n    .voicing()\n    .s('gm_string_ensemble_2').gain(0.6),\n  s(\"[bd!2 ~ bd]*2\").bank(\"AkaiLinn\").lpf(300).gain(0.15)\n).cpm(90/4).room(0.8)",
      "description": "Orchestral progressive with piccolo and choir (from Oh by Tim Smith / Spratleys Japs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "oh.js",
      "tags": ["timsmith", "spratleysjaps", "progressive", "orchestral", "piccolo"]
    },
    {
      "name": "Old MacDonald",
      "code": "stack(\n  note(\"F5*2 [F5 C5] D5*2 C5 A5*2 G5*2 F5@2\")\n    .clip(0.9).piano().gain(0.8),\n  chord(\"<F [A# F] [F C] [F@3 ~]>\")\n    .anchor(\"G4\").voicing()\n    .struct(\"[~ x]*4 [[~ x]*2 [x@3 ~]]\")\n    .piano().gain(0.6),\n  n(\"[2 1]*4\")\n    .chord(\"<F [A# F] [F C] [F@3 ~]>\")\n    .anchor(\"F2\").voicing()\n    .struct(\"[x ~]*8\")\n    .piano().gain(0.6),\n  s(\"<~@2 0 ~@3 1 0 ~@3 2 1 0>\").pick([\"crow\",\"gm_bird_tweet\",\"clash\"]).release(0)\n).cpm(140/8).room(0.4)",
      "description": "Folk classic with piano and animal sounds (Old MacDonald arrangement)",
      "category": "folk",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "oldmacdonald.js",
      "tags": ["folk", "traditional", "piano", "childrens", "arrangement"]
    },
    {
      "name": "Strudelman",
      "code": "stack(\n  s(\"cr/16\").late(666)\n    .bank(rand.range(0,3).pick([\"RolandTR707\",\"RolandS50\",\"SequentialCircuitsDrumtracks\",\"Linn9000\"]))\n    .clip(rand.range(1,3))\n    .loop(1).loopBegin(.1)\n    .loopEnd(rand.range(.18,.3))\n    .speed(rand.range(.06,.10))\n    .pan(rand.range(.3,.7))\n    .gain(.2).attack(.5).release(3),\n  note(\"a1/8\").late(333)\n    .s(rand.range(0,40).pick([\"numbers:0\",\"numbers:1\",\"numbers:2\",\"numbers:3\",\"~\"]))\n    .speed(rand.range(.2,.3))\n    .gain(.9)\n).cpm(120)",
      "description": "Experimental dark ambient with randomized samples and delays (Strudelman by eefano)",
      "category": "experimental",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudelman.js",
      "tags": ["eefano", "experimental", "ambient", "dark", "random"]
    },
    {
      "name": "Veronica In Ecstasy",
      "code": "stack(\n  note(\"[[f#6]*3 [f#6 [~ ~ f#6]]] [[f#6]*3 [[f#6 e6 ~] e6]]\")\n    .clip(0.9).piano().gain(0.8),\n  chord(\"<B [F# A] [C G] [D C#] [E A] [B C#] [Fm A#] [E A]>\")\n    .anchor(\"G4\").voicing()\n    .struct(\"<[[~ x x] [x@2 x] [~ x ~] x]!8 [x!4] [~ x ~ x]!2>\")\n    .piano().gain(0.6),\n  note(\"<B [F# A] [C G] [D C#] [E A] [B C#] [Fm A#] [E A]>\")\n    .rootNotes(2)\n    .struct(\"<[x@2 ~]*2!9 [x ~ [~ ~ x] ~]!2>\")\n    .piano().gain(0.6)\n).cpm(120/4).room(0.4)",
      "description": "Complex piano progressive (from Veronica In Ecstasy by Tim Smith)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "veronicainecstasy.js",
      "tags": ["timsmith", "cardiacs", "progressive", "piano", "complex"]
    },
    {
      "name": "Magic And Ecstasy",
      "code": "stack(\n  note(\"<[a2 [a2 b2] a2 [a2 c3] a2 [a2 d3] [d#3 d3] [c#3 d3]>\")\n    .release(.05)\n    .layer(\n      x => x.s(\"gm_overdriven_guitar:6\").hpf(500).lpf(2500).gain(1.2),\n      x => x.s(\"gm_electric_bass_finger\").transpose(-12).lpf(400).gain(.9)\n    ),\n  note(\"<[~ c4] [a3 b3] c4 d4 d#4 f4 f#4 f4 g#4 f#4 f4 d#4>\")\n    .layer(\n      x => x.piano().gain(.7),\n      x => x.s(\"gm_piccolo\").gain(.25).transpose(12)\n    ).transpose(12),\n  s(\"tambourine*2\").velocity(.8)\n).cpm(145).room(.3)",
      "description": "Film soundtrack with overdrive guitar and orchestral layers (Magic And Ecstasy by Ennio Morricone)",
      "category": "soundtrack",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "magicandecstasy.js",
      "tags": ["morricone", "soundtrack", "guitar", "orchestral", "exorcist"]
    },
    {
      "name": "Woodeneye",
      "code": "stack(\n  chord(\"<[~ A:f4:.6:0!15] [~ A:g4:.6!7] [F:f4:.6!8]>/2\")\n    .voicing().speed(0.97).begin(.03)\n    .s('gm_synth_bass_1').lpf(2000).gain(.7),\n  s(\"<oh,<~ bd!3> [sd <~!3 [sd,oh]>]>*2\")\n    .bank(\"LinnDrum\").room(.2).gain(0.75)\n).cpm(200/4)",
      "description": "Minimal synth progressive with dynamic chords (from Woodeneye by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "woodeneye.js",
      "tags": ["cardiacs", "progressive", "synth", "minimal", "dynamic"]
    },
    {
      "name": "Buds And Spawn",
      "code": "stack(\n  n(\"[0,2,4]\").scale(\"f#:major\")\n    .s(\"recorder_tenor_sus\")\n    .clip(1).decay(1.2).sustain(0).release(0.5),\n  n(\"[-5@0.5 -4 -3 [-2 -1] 0 1 2@0.5]\")\n    .clip(0.7).scale(\"f#:major\")\n    .s(\"sax\").gain(0.3).clip(1).release(0),\n  s(\"[bd sd [~ bd] sd bd sd],hh*6\")\n    .bank(\"YamahaRY30\").clip(1).gain(0.08)\n).cpm(165/4)",
      "description": "Progressive with sax and recorder (from Buds And Spawn by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "budsandspawn.js",
      "tags": ["cardiacs", "progressive", "sax", "recorder", "complex"]
    },
    {
      "name": "Clubbed",
      "code": "stack(\n  chord(\"<Am Dm Em G7>/4\")\n    .anchor(\"g5\").voicing()\n    .s(\"gm_percussive_organ\").gain(0.8).room(.4),\n  chord(\"<Am Dm Em G7>/4\")\n    .s(\"gm_electric_guitar_clean:2\")\n    .clip(0.5).release(0.1).gain(0.9).room(0.2),\n  s(\"<bd sd [bd [~ bd]] sd [bd <~ bd>] [[sd bd] ~]>*2\")\n    .bank(\"RolandTR808\").room(1).lpf(1800).gain(3.5)\n).cpm(162/3)",
      "description": "Minimal electronic with guitar and organ (Clubbed by eefano)",
      "category": "electronic",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "clubbed.js",
      "tags": ["eefano", "electronic", "minimal", "guitar", "organ"]
    },
    {
      "name": "Annie's Room",
      "code": "chord(\"<Bm@3 G Em A Em D G@2 A Em D G A Em>/2\")\n  .layer(\n    x => x.anchor('b4').voicing()\n      .s(\"gm_reed_organ\")\n      .attack(0.1).release(1.5).room(1).gain(0.4),\n    x => n(\"0\").chord(x).anchor('c3')\n      .mode('root').voicing()\n      .s(\"gm_church_organ\").room(1).gain(0.4),\n    x => n(\"[0,[~ 1@20],[~@2 2@20]]\").chord(x)\n      .anchor('e4').voicing()\n      .s(\"gm_acoustic_guitar_nylon\").room(0.6).gain(0.5)\n  ).cpm(90)",
      "description": "Multi-layered organ and guitar arrangement (from Up In Annie's Room by The Sea Nymphs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "anniesroom.js",
      "tags": ["seanymphs", "organ", "guitar", "layers", "voicing"]
    },
    {
      "name": "Big Ship Progression",
      "code": "stack(\n  n(\"-2 -1 0 2 0 1\")\n    .chord(\"<Am!2 D F Am D@2 Am!2 A# Am E@2 C F Am D@4>\".fast(2))\n    .anchor(\"G5\").voicing()\n    .s('gm_violin').clip(1).gain(0.3),\n  chord(\"<Am!2 D F Am D@2 Am!2 A# Am E@2 C F Am D@4>\".fast(2))\n    .anchor(\"<A5 F5 F5 F5 F5 G5@2 A5 F5 G#5 F5 E5@2 E5 F5 F5 G5@4>\".fast(2))\n    .voicing()\n    .s('gm_drawbar_organ').clip(1).gain(0.9),\n  s(\"[bd!2 ~ bd]*2\").bank(\"AkaiLinn\").lpf(200).gain(0.35),\n  s(\"[~ <[sd ~ ~ sd] sd>]*2\").bank(\"AkaiLinn\").gain(0.30)\n).cpm(120/4).room(0.3)",
      "description": "Progressive rock with organ and violin voicings (from Big Ship by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "bigship.js",
      "tags": ["cardiacs", "progressive", "organ", "violin", "voicing"]
    },
    {
      "name": "Eden On The Air",
      "code": "stack(\n  n(run(6).palindrome().fast(5))\n    .clip(2).chord(\"<A@2 E@2 A F#m B@2 E@2 A>\")\n    .anchor(\"<A@2 E@2 A F#m B@2 E@2 A>\".rootNotes(5))\n    .voicing().s(\"gm_electric_guitar_jazz\"),\n  chord(\"<A@2 E@2 A F#m B@2 E@2 A>\")\n    .anchor(\"B4\").voicing().s(\"gm_piccolo\")\n).cpm(95/4).room(0.5).gain(0.6)",
      "description": "Jazz guitar with piccolo (from Eden On The Air by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "edenontheair.js",
      "tags": ["cardiacs", "progressive", "jazz", "guitar", "piccolo"]
    },
    {
      "name": "Pump Up The Jam",
      "code": "stack(\n  vowel(\"[u [u e] a [u i] [u ~] [a u] [i a] [o@3 i]]/4\")\n    .s(\"sawtooth\").clip(0.8).gain(1.4),\n  n(\"<0@7 -4 0@6 0@4 -4 0@9 3@2 4@2>*4\")\n    .scale(\"c2:minor\")\n    .s(\"sawtooth\")\n    .lpf(300).gain(0.8),\n  s(\"oh*16\").gain(\"[0.08 0.16]*4\"),\n  s(\"bd*4\").lpf(150).gain(1),\n  s(\"[~ cp]*2\").gain(0.5)\n).bank(\"RolandTR909\").cpm(124.5/4).room(0.3)",
      "description": "Techno classic with vowel formants and 909 drums (Pump Up The Jam by Technotronic)",
      "category": "techno",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "pumpupthejam.js",
      "tags": ["technotronic", "techno", "909", "vowel", "90s"]
    },
    {
      "name": "Cabinet Arrangement",
      "code": "stack(\n  chord(\"<D@8 A F@3>\".slow(12))\n    .rootNotes(3)\n    .s('triangle').lpf(400).gain(0.6),\n  chord(\"<D@8 A F@3>\".slow(12))\n    .anchor(\"E5\").voicing()\n    .s('gm_drawbar_organ').gain(0.35),\n  s(\"sleighbells\").struct(\"x*6\").gain(3),\n  s(\"[bd sd]\").gain(0.4).room(2)\n).cpm(133/8)",
      "description": "Progressive chord arrangement with organ and percussion (from Cabinet by Spratleys Japs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "cabinet.js",
      "tags": ["spratleysjaps", "progressive", "organ", "chords", "arrangement"]
    },
    {
      "name": "Shanghai Progression",
      "code": "stack(\n  n(\"<0 1 2 ~ 4 5 5 ~ 4 2 1 5 8 7 9!2 7 8 5 1 2 4>*4\")\n    .scale('ab4:major')\n    .clip(.5).s(\"triangle\").room(.8),\n  n(\"<[0,2,4]!4>\".add(\"<0 1 0 1 -2 0>/8\"))\n    .scale(\"<ab3:major@5 bb3:major@1>/8\")\n    .piano().gain(.5),\n  n(\"<0@7 -4 0@6 0@4 -4 0@9 3@2 4@2>*4\".add(\"<0 1 0 1 5 1>/8\"))\n    .scale('ab1:major')\n    .clip(.95).s(\"gm_electric_bass_finger\").lpf(800)\n).cpm(81)",
      "description": "Progressive melody with chord changes and bass (from Shanghai by King Gizzard)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "shanghai.js",
      "tags": ["kinggizzard", "progressive", "chords", "bass", "melody"]
    },
    {
      "name": "Voicing Demonstration",
      "code": "stack(\n  chord(\"<Am7 Dm7 G7 Cmaj7>\")\n    .anchor(\"E4\").voicing()\n    .piano().gain(0.6),\n  chord(\"<Am7 Dm7 G7 Cmaj7>\")\n    .rootNotes(2)\n    .s(\"gm_electric_bass_finger\").lpf(200).gain(0.8)\n).cpm(90)",
      "description": "Demonstration of voicing() for chord inversions and bass root notes",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["voicing", "chords", "technique", "jazz", "demonstration"]
    },
    {
      "name": "Scale Modulation",
      "code": "note(\"0 2 4 5 7 9 11 12\")\n  .scale(\"<C:major G:mixolydian D:dorian A:minor>\")\n  .s(\"gm_electric_piano\")\n  .room(0.4).gain(0.7).cpm(110)",
      "description": "Demonstration of scale modulation through different modes",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["scale", "modulation", "modes", "technique", "demonstration"]
    },
    {
      "name": "Polyrhythm Example",
      "code": "stack(\n  note(\"0 2 4\").scale(\"C:minor\").s(\"triangle\").fast(3),\n  note(\"0 3 7\").scale(\"C:minor\").s(\"sawtooth\").fast(5).gain(0.6),\n  s(\"bd sd\").fast(2)\n).cpm(120)",
      "description": "Demonstration of polyrhythm with 3:5:2 pattern relationships",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["polyrhythm", "technique", "rhythm", "demonstration"]
    },
    {
      "name": "Shostakovich Waltz",
      "code": "stack(\n  n(\"<<0 -1> [4,5]!2>*3\")\n    .chord(\"<Cm@10 Fm@4 G@4 Cm@4 Fm@2 Bb@2 Eb Ab>\")\n    .anchor('f2').mode('root').voicing()\n    .piano(),\n  n(\"<4 [2@2 1] [0@4 0 1]@2 [2 0 2] [4@2 5] 4 3>\")\n    .scale(\"c4:minor\")\n    .s(\"gm_oboe:2\").gain(0.7)\n).room(0.6).cpm(cps(sine.segment(32).slow(16).mul(30).add(160).div(60*3)))",
      "description": "Classical waltz with dynamic tempo changes (Waltz #2 by Shostakovich)",
      "category": "classical",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "waltzno2.js",
      "tags": ["shostakovich", "classical", "waltz", "tempo", "oboe"]
    },
    {
      "name": "Waltz with Voicings",
      "code": "stack(\n  n(\"[0@2 ~, ~ [[1,2,3] ~]!2]\")\n    .chord(\"<[Dm Am]!2 [F C]!2>/4\")\n    .anchor(\"<[B3 G3]!2 [C4 B3]!2>/4\")\n    .voicing().velocity(0.5),\n  n(\"<[3@5.5 2@0.5 1@3 0@3] [3@3.5 [4 3 2 1 2]@2.5 1@3 0@3]>/4\")\n    .scale(\"a4:minor\")\n).s(\"gm_harmonica\").lpf(4000)\n  .attack(0.1).release(0.1)\n  .room(1.5)\n  .cpm(64).gain(.6)",
      "description": "Waltz pattern with chord voicings and harmonica melody (from Amelie Waltz)",
      "category": "waltz",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "ameliewaltz.js",
      "tags": ["waltz", "voicing", "harmonica", "chords", "slow"]
    },
    {
      "name": "Depeche Mode Coda",
      "code": "stack(\n  note(\"<[3,5,0] [5,0,2] [0,2,4] [2,4,-1]>\")\n    .scale('c minor')\n    .s(\"recorder_bass_sus\").gain(1.5).release(0.5),\n  note(\"<[2@3 3] [0@3 2] [4@3 6] [2@3 3]>\")\n    .scale('c minor').transpose(12)\n    .s(\"ocarina\").gain(0.6).release(0.1),\n  note(\"<-4 -2 0 -1>\")\n    .struct(\"[[x ~]!2 x x@0.5 [x ~]!2]\")\n    .scale('c minor')\n    .s(\"triangle\").gain(0.8).sustain(0.8),\n  s(\"bd!4,[~ sd]!2,[~ hh!2 hh*2]!2\")\n    .bank(\"AlesisHR16\").gain(0.08)\n).cpm(113/4)",
      "description": "Multi-layered arrangement with chords and melody (from Enjoy The Silence by Depeche Mode)",
      "category": "electronic",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "enjoythesilence.js",
      "tags": ["depechemode", "80s", "electronic", "chords", "melody"]
    },
    {
      "name": "Guitar Strumming Pattern",
      "code": "\"<Am Dm Em G7>/4\".layer(\n  chord => note(\"<[1,3,4]*8 [2,4,5]*8>/3\")\n    .chord(chord)\n    .s(\"gm_electric_guitar_clean:2\")\n    .clip(0.5).release(0.1)\n    .gain(0.9).room(0.2),\n  chord => chord(chord)\n    .anchor(\"g5\").voicing()\n    .s(\"gm_percussive_organ\")\n    .gain(0.8)\n    .mask(\"<~@3 1@6 ~@3>/12\")\n).cpm(162/3)",
      "description": "Guitar strumming with organ chords (from Clubbed)",
      "category": "guitar",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "clubbed.js",
      "tags": ["guitar", "strumming", "chords", "organ", "layer"]
    },
    {
      "name": "Blue Monday",
      "code": "stack(\n  s(\"bd!2 [bd*4]!2 bd!4\").slow(8)\n    .bank(\"SequentialCircuitsDrumtracks\"),\n  s(\"~ hh\").bank(\"SequentialCircuitsDrumtracks\"),\n  n(\"<[[2 ~] [2 ~] 2 3] [[3 ~] [3 ~] 3 3]>@4 [-1 ~] -1 -1\")\n    .slow(8)\n    .scale(\"d2:minor\")\n    .s(\"gm_lead_8_bass_lead\")\n).cpm(130)",
      "description": "Iconic synth bass with drum machine (from Blue Monday by New Order)",
      "category": "electronic",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "bluemonday.js",
      "tags": ["synth", "bass", "neworder", "80s", "electronic", "iconic"]
    },
    {
      "name": "El Pueblo Unido",
      "code": "stack(\n  note(\"<0@5 0 2@5 2 4@2 4 3@2 2 1@5 <-3 4>>*12\")\n    .scale(\"a5:minor\")\n    .clip(0.95)\n    .layer(\n      x => x.s(\"gm_ocarina\").gain(0.6).room(0.6),\n      x => x.transpose(-24).s(\"gm_choir_aahs:3\").gain(0.8)\n    ),\n  note(\"<b@2 f@2 ~ b b@2 f@2 ~ b>*12\")\n    .clip(0.90).s(\"gm_applause:3\").room(2).gain(0.35)\n).cpm(95/4)",
      "description": "Latin American folk with ocarina and choir layers (El Pueblo Unido by Inti-Illimani)",
      "category": "folk",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "elpueblo.js",
      "tags": ["intiillimani", "folk", "latin", "ocarina", "choir"]
    },
    {
      "name": "Italian Tarantella",
      "code": "stack(\n  rand.range(0,16).segment(16).slow(16)\n    .pick([\"4 ~ 4\",\"7 ~ 7\",\"4\",\"5 ~ 5\",\"4 ~ 5\"])\n    .scale(\"a:minor\")\n    .s('gm_clarinet').note(),\n  rand.range(0,3).segment(16).slow(16).fast(2)\n    .pick([\"[0 ~] [-3 ~]\",\"[3 ~] [-2 ~]\",\"[1 ~] [-3 ~]\"])\n    .slow(2)\n    .scale(\"a2:minor\")\n    .s('gm_tuba').note().lpf(800),\n  s(\"tambourine\")\n).cpm(140)",
      "description": "Italian tarantella with clarinet, tuba, and tambourine",
      "category": "folk",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "tarantella.js",
      "tags": ["tarantella", "italian", "folk", "clarinet", "random"]
    },
    {
      "name": "Busty Beez",
      "code": "stack(\n  note(\"<b4@3 c5 g4@2 g4 f4 c#4 c#4@2 a4@2:4 a4 b4@2 b4 f#4>\")\n    .s(\"gm_tenor_sax\").release(.2).gain(.9).room(1),\n  chord(\"<G@3 C@3 C#@3 A@4 F@3 B@4 G#@5 F#@3>\")\n    .anchor(\"g4\").voicing()\n    .s(\"gm_electric_guitar_clean\").gain(.6).room(.5),\n  s(\"<[bd,cr]@3 bd sd@2 bd@2 sd bd@2 sd@2 sd [bd,cr]@2>\")\n    .bank(\"RolandTR909\").gain(.4)\n).cpm(182/8)",
      "description": "Complex progressive with sax and guitar (from Busty Beez by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "bustybeez.js",
      "tags": ["cardiacs", "progressive", "sax", "complex", "fast"]
    },
    {
      "name": "Swimming With The Snake",
      "code": "stack(\n  note(\"4 5 6 3 5 6 5 2 3 4 5 2 6 ~ 7 6 4 2 5 3 6 5 3 7\")\n    .slow(20).scale(\"c#:minor\").add(12)\n    .s(\"gm_pad_warm\").release(0.05).room(0.5).gain(0.2),\n  note(\"[0@8 -1@4 -2@2 -3@2 -2@8]/24\")\n    .scale(\"c#:minor\").sub(12)\n    .s(\"gm_synth_strings_2\").gain(1),\n  note(\"[~@0.5 11 13!2 11@4 ~ 11 13!2 11 9 10 11]/24\")\n    .scale(\"c#:minor\")\n    .s(\"triangle\").hpf(900).attack(.05).release(.05).clip(.97).gain(1.2),\n  s(\"shaker_small\").struct(\"[x ~ ~ x]\").gain(\"4.0 ~ ~ 2.0\")\n).cpm(95)",
      "description": "Experimental progressive with generative patterns (from Swimming With The Snake by Tim Smith)",
      "category": "experimental",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "swimmingsnake.js",
      "tags": ["timsmith", "cardiacs", "experimental", "progressive", "generative"]
    },
    {
      "name": "Disto",
      "code": "stack(\n  n(\"<[[0,4]]*3>\")\n    .scale(\"c#2:minor\")\n    .s(\"supersaw\").transpose(\"<0 2 [3 1]>/8\")\n    .lpf(\"<[10 10 100]>\").distort(\"8:0.18\"),\n  n(\"<[[5 ~]*3] 4 4b 3 [1 2 1] 0 [4 5 2] 4>\")\n    .scale(\"c#4:minor\")\n    .transpose(\"<0 2 [3 1]>/8\")\n    .s(\"supersaw\").lpf(500).distort(\"10:0.12\").room(0.2),\n  s(\"<bd*3 [~ bd bd] [sd ~ bd] [mt lt bd] [[sd,[~ sd@6]] sd mt]>\")\n    .bank(\"EmuDrumulator\").room(0.9).gain(0.5)\n).cpm(90)",
      "description": "Dark electronic with heavy distortion (Disto by eefano)",
      "category": "electronic",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "disto.js",
      "tags": ["eefano", "electronic", "dark", "distortion", "industrial"]
    },
    {
      "name": "Mouth Breather",
      "code": "stack(\n  note(stack(\"<c3@9 c#3 c3@2>\",\"<g3 f3@2 g3@4 f3 g3 g#3 g3 f3>\")\n      .add(\"<0,5>\"))\n    .struct(\"<x!4 ~!2 x!9 x@3 x!6>\")\n    .s(\"gm_electric_guitar_clean:2\")\n    .distort(\"10:.17\").room(.1).gain(0.8),\n  note(\"<c2!3 c2@2 ~ c2!3 <[c#2 f2 c#2] [c2 f2 g2]>@3>\")\n    .s(\"gm_electric_bass_pick\").release(.06)\n    .distort(\"5:.3\").room(.2).gain(0.8),\n  s(\"<bd ~ bd ~!2 bd!2 ~!2 bd ~!2 bd ~!2 bd ~ bd ~ bd ~!2 bd ~>\")\n    .bank(\"RolandTR808\").room(.8).gain(0.6)\n).cpm(215*2)",
      "description": "Noise rock with distorted guitar and bass (from Mouth Breather by The Jesus Lizard)",
      "category": "rock",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "mouthbreather.js",
      "tags": ["jesuslizard", "noiserock", "distortion", "guitar", "bass"]
    },
    {
      "name": "Everso Closely Guarded Line",
      "code": "stack(\n  note(\"<d4@2 a d4 g c4 f a d4>\")\n    .s(\"gm_overdriven_guitar\").gain(.8),\n  note(\"<a@7 c4@3 d4@6 e4@2 c4@7 d4@2>\")\n    .s(\"gm_tenor_sax\").gain(.8),\n  chord(\"<D Dm Am D Gm C F Am A#>*9\")\n    .anchor(\"C4\").voicing()\n    .s(\"gm_reed_organ\").gain(.25),\n  s(\"<rd*3, <<<bd!4 sd> sd> ~ bd>*3, cr/9>*9\")\n    .bank(\"Linn9000\").speed(.95).gain(.7)\n).room(.8).cpm(93.2*3/4/9)",
      "description": "Epic progressive with sax and guitar (from The Everso Closely Guarded Line by Cardiacs)",
      "category": "progressive",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "eversoclosely.js",
      "tags": ["cardiacs", "progressive", "epic", "sax", "guitar"]
    },
    {
      "name": "Pyramid Song",
      "code": "stack(\n  note(\"<[[f#2,c#3,a#3,c#4,f#4:.6 f#2,c#3,a#3,c#4,f#4:.8]@3 g2,d3,b3,d4,f#4:.5@2>\")\n    .velocity(.5).piano().gain(0.8).room(.6),\n  note(\"<f#5@11 e5:-2 g#5:4 e5:-4 [f#5:2 ~] [~ g#5 e5] f#5@4>*4\")\n    .penv(0).patt(0.04).s(\"triangle\")\n    .attack(.08).release(.08).vmod(.1).vib(5).gain(0.3).lpf(2000).room(1.5),\n  s(\"<[bd,rd] ~ [~ sf*3] [bd,rd] ~ [~ sf*3] [bd,rd] ~ ~ [~ sf*3]>*8\")\n    .bank('Linn9000').lpf(1000).gain(0.6)\n).cpm(104/4)",
      "description": "Alternative rock with complex time signature (from Pyramid Song by Radiohead)",
      "category": "alternative",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "pyramidsong.js",
      "tags": ["radiohead", "alternative", "piano", "complex", "timesignature"]
    },
    {
      "name": "Vermin Mangle",
      "code": "stack(\n  note(\"<f#4 ~ c#5@3 ~ a#4@2 g#4 ~ f#4 ~ a4@2 g#4 ~ f#4 ~ e4 ~ d4@2>*6\")\n    .clip(.98).s(\"gm_trumpet\").pan(.3).gain(.6),\n  chord(\"<F#@2 E7@2>\")\n    .anchor('E4').voicing()\n    .s(\"gm_accordion:2\").struct(\"[~ x x]\")\n    .clip(.6).pan(.40).gain(.4),\n  s(\"bassdrum2:2,tambourine:0\").clip(1.5).gain(1.5)\n).room(.8).cpm(52)",
      "description": "Experimental jazz with trumpet and accordion (from Vermin Mangle by Tim Smith)",
      "category": "experimental",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "verminmangle.js",
      "tags": ["timsmith", "cardiacs", "experimental", "trumpet", "accordion"]
    },
    {
      "name": "She Don't Use Jelly",
      "code": "stack(\n  note(\"<f#4 f#4*2 [a4:3:.1 f#4:-2:.1] [e4 f#4@2:3:.1 f#4]@2>\")\n    .penv(0).patt(0)\n    .s(\"gm_overdriven_guitar:11\").gain(.55).hpf(400).lpf(5000),\n  chord(\"<D5 G5 A5>\")\n    .s(\"gm_electric_guitar_clean:2\")\n    .clip(0.5).release(0.1).gain(0.9).room(0.2),\n  note(\"<d2!3 ~ d2 ~ g1!3 ~ g1 ~ a1!3 ~ a1 ~>\")\n    .s(\"gm_electric_bass_finger\").lpf(190).gain(1),\n  s(\"<[bd sd],hh!3>\").bank(\"RolandTR808\").gain(0.6)\n).cpm(86)",
      "description": "Alternative rock with guitar layers (from She Don't Use Jelly by The Flaming Lips)",
      "category": "alternative",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "shedontusejelly.js",
      "tags": ["flaminglips", "alternative", "rock", "guitar", "90s"]
    },
    {
      "name": "Layer Technique",
      "code": "note(\"C3 E3 G3\")\n  .layer(\n    x => x.s(\"sawtooth\").lpf(800),\n    x => x.s(\"triangle\").gain(0.5),\n    x => x.s(\"sine\").transpose(12).gain(0.3)\n  ).room(0.4).cpm(100)",
      "description": "Demonstration of layer() for creating rich multi-timbral sounds",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["layer", "technique", "synthesis", "demonstration", "timbre"]
    },
    {
      "name": "Euclidean Rhythm",
      "code": "stack(\n  s(\"bd\").euclidean(3, 8),\n  s(\"sd\").euclidean(5, 8),\n  s(\"hh\").euclidean(7, 16)\n).cpm(120)",
      "description": "Demonstration of euclidean rhythms for complex polyrhythmic patterns",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["euclidean", "rhythm", "technique", "polyrhythm", "demonstration"]
    },
    {
      "name": "Struct Pattern",
      "code": "stack(\n  note(\"0 2 4 7\").scale(\"C:minor\")\n    .struct(\"x ~ x ~ x ~ ~ x\")\n    .s(\"triangle\"),\n  s(\"bd sd\").struct(\"x ~ ~ x ~ x ~ ~\")\n).cpm(110)",
      "description": "Demonstration of struct() for applying rhythmic patterns to melodies",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["struct", "rhythm", "technique", "pattern", "demonstration"]
    },
    {
      "name": "The Sicilian Clan",
      "code": "stack(\n  n(\"<[~ 0 1 0 2@2]!14 [~ 0 1 2 2@2] [~ 1 4 3 4@2]>*8/6\")\n    .chord(\"<Am@3 E Edim@2 D@3 Ddim E7@2 Am@3 [B@2 A#]@3>*2\")\n    .anchor(\"<E4@3 E4 E4@2 D4@3 D4 D4@2 C4@3 [B3@2 A#3]@3>*2\")\n    .voicing().s(\"gm_electric_guitar_jazz\").gain(0.8),\n  note(\"<A4@2 C5 B4 A#4@2 A4@3 C5 B4 A#4 A4@2 C5@2 B4>*2\")\n    .s(\"gm_oboe\").gain(0.4),\n  chord(\"<Am@3 E Edim@2 D@3 Ddim E7@2 Am@3 [B@2 A#]@3>*2\")\n    .anchor(\"G4\").struct(\"x*4\").voicing()\n    .s(\"gm_synth_strings_2\").gain(0.2)\n).cpm(120.3/4).room(0.6)",
      "description": "Film soundtrack with jazz guitar and strings (The Sicilian Clan by Ennio Morricone)",
      "category": "soundtrack",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "clandeisiciliani.js",
      "tags": ["morricone", "soundtrack", "film", "jazz", "strings"]
    },
    {
      "name": "Sometimes Pattern",
      "code": "s(\"bd sd hh sd\")\n  .sometimes(x => x.fast(2))\n  .sometimesBy(0.3, x => x.slow(2))\n  .cpm(120)",
      "description": "Demonstration of sometimes() for probabilistic pattern variations",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["sometimes", "probability", "technique", "variation", "demonstration"]
    },
    {
      "name": "Stack & Superimpose",
      "code": "note(\"0 2 4 7\").scale(\"C:major\")\n  .s(\"triangle\")\n  .superimpose(x => x.transpose(7))\n  .superimpose(x => x.transpose(12).gain(0.5))\n  .cpm(120)",
      "description": "Demonstration of superimpose() for creating harmony and octaves",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["superimpose", "harmony", "technique", "layers", "demonstration"]
    },
    {
      "name": "Every Pattern",
      "code": "s(\"bd sd hh sd\")\n  .every(2, x => x.fast(2))\n  .every(3, x => x.gain(1.5))\n  .every(4, x => x.room(0.5))\n  .cpm(120)",
      "description": "Demonstration of every() for periodic pattern transformations",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["every", "technique", "transformation", "periodic", "demonstration"]
    },
    {
      "name": "Off Pattern",
      "code": "note(\"0 2 4 7\").scale(\"C:major\")\n  .s(\"triangle\")\n  .off(1/8, x => x.transpose(7))\n  .off(1/4, x => x.transpose(12).gain(0.5))\n  .cpm(120)",
      "description": "Demonstration of off() for creating echoes and canons",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["off", "echo", "canon", "technique", "demonstration"]
    },
    {
      "name": "Segment Pattern",
      "code": "note(\"0 2 4 5 7 9 11 12\")\n  .scale(\"C:major\")\n  .segment(4)\n  .s(\"triangle\")\n  .cpm(120)",
      "description": "Demonstration of segment() for rhythmic subdivision of patterns",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["segment", "subdivision", "technique", "rhythm", "demonstration"]
    },
    {
      "name": "Chop & Stutter",
      "code": "s(\"bd sd\")\n  .chop(8)\n  .sometimes(x => x.ply(2))\n  .stutter(4, 0.125)\n  .cpm(120)",
      "description": "Demonstration of chop(), ply() and stutter() for granular effects",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["chop", "stutter", "granular", "technique", "demonstration"]
    },
    {
      "name": "Degradation & Mask",
      "code": "s(\"bd sd hh sd\")\n  .degradeBy(0.3)\n  .mask(\"1 0 1 1 0 1 0 1\")\n  .cpm(120)",
      "description": "Demonstration of degradeBy() and mask() for controlled randomness",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["degradeBy", "mask", "technique", "probability", "demonstration"]
    },
    {
      "name": "Rev & Palindrome",
      "code": "note(\"0 2 4 7\")\n  .scale(\"C:minor\")\n  .s(\"triangle\")\n  .palindrome()\n  .every(2, x => x.rev())\n  .cpm(120)",
      "description": "Demonstration of rev() and palindrome() for reversing patterns",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["rev", "palindrome", "technique", "reverse", "demonstration"]
    },
    {
      "name": "Iter & Chunk",
      "code": "note(\"0 2 4 7 9 11\")\n  .scale(\"C:major\")\n  .iter(4)\n  .chunk(2, x => x.fast(2))\n  .s(\"triangle\")\n  .cpm(120)",
      "description": "Demonstration of iter() and chunk() for pattern rotation and chunking",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["iter", "chunk", "technique", "rotation", "demonstration"]
    },
    {
      "name": "Rand & Perlin",
      "code": "note(rand.range(0, 12))\n  .scale(\"C:minor\")\n  .s(\"triangle\")\n  .gain(perlin.range(0.3, 0.8))\n  .pan(sine.slow(4))\n  .cpm(120)",
      "description": "Demonstration of rand, perlin and sine for generative patterns",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["rand", "perlin", "sine", "generative", "demonstration"]
    },
    {
      "name": "Jux & JuxBy",
      "code": "s(\"bd sd hh sd\")\n  .jux(x => x.rev())\n  .juxBy(0.5, x => x.fast(2))\n  .cpm(120)",
      "description": "Demonstration of jux() and juxBy() for stereo effects",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["jux", "stereo", "technique", "panning", "demonstration"]
    },
    {
      "name": "Range & Fit",
      "code": "note(\"0 2 4 7\")\n  .scale(\"C:minor\")\n  .s(\"triangle\")\n  .lpf(perlin.range(200, 2000))\n  .gain(sine.fit(0.3, 0.8))\n  .cpm(120)",
      "description": "Demonstration of range() and fit() for signal mapping",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["range", "fit", "technique", "signals", "demonstration"]
    },
    {
      "name": "Fast & Slow",
      "code": "s(\"bd sd hh sd\")\n  .fast(\"<1 2 4 0.5>\")\n  .slow(\"<1 1 1 2>\")\n  .cpm(120)",
      "description": "Demonstration of fast() and slow() for tempo modulation",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["fast", "slow", "technique", "tempo", "demonstration"]
    },
    {
      "name": "Hurry & Linger",
      "code": "note(\"0 2 4 7\").scale(\"C:minor\")\n  .s(\"triangle\")\n  .hurry(\"<1 2 1 0.5>\")\n  .linger(\"<1 1 1.5 1>\")\n  .cpm(120)",
      "description": "Demonstration of hurry() and linger() for time stretching",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["hurry", "linger", "technique", "time", "demonstration"]
    },
    {
      "name": "Press & Hush",
      "code": "s(\"bd sd hh sd\")\n  .press()\n  .sometimes(x => x.hush())\n  .cpm(120)",
      "description": "Demonstration of press() and hush() for pattern control",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["press", "hush", "technique", "control", "demonstration"]
    },
    {
      "name": "Add & Mul",
      "code": "note(\"0 2 4 7\")\n  .scale(\"C:minor\")\n  .s(\"triangle\")\n  .add(\"<0 2 4 7>\")\n  .mul(\"<1 2 1 0.5>\")\n  .cpm(120)",
      "description": "Demonstration of add() and mul() for mathematical pattern manipulation",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["add", "mul", "technique", "math", "demonstration"]
    },
    {
      "name": "Union & Append",
      "code": "note(\"0 2 4\")\n  .scale(\"C:minor\")\n  .union(note(\"7 9 11\").scale(\"C:minor\"))\n  .append(note(\"12\").scale(\"C:minor\"))\n  .s(\"triangle\")\n  .cpm(120)",
      "description": "Demonstration of union() and append() for combining patterns",
      "category": "technique",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "strudel-docs",
      "tags": ["union", "append", "technique", "combination", "demonstration"]
    },
    {
      "name": "Appealing to Venus",
      "code": "stack(\n  chord(\"<F Dm Gm C F Dm Gm A#>\")\n    .anchor(\"<C4 A4 D4 E4 C4 A4 D4 D4>\")\n    .struct(\"x ~ ~ x ~ x ~ x ~ ~ ~\")\n    .voicing().piano().gain(0.7),\n  note(\"<c4 a4 d4 e4 c4 a4 d4 d4>\")\n    .s(\"gm_choir_aahs:3\").gain(0.4),\n  note(\"<f2 d2 g2 c2 f2 d2 g2 a#2>\")\n    .s(\"gm_acoustic_bass\").gain(0.8).lpf(200)\n).cpm(120/4).room(0.6)",
      "description": "Ambient arrangement with piano and choir (from Appealing to Venus by eefano)",
      "category": "ambient",
      "author": "eefano",
      "license": "CC-BY-SA",
      "source": "appealingtovenus.js",
      "tags": ["ambient", "piano", "choir", "eefano", "calm"]
    },
    {
      "name": "Coastline",
      "code": "// coastline by eddyflux\nsamples('github:eddyflux/crate')\nsetcps(.75)\nlet chords = chord(\"<Bbm9 Fm9>/4\").dict('ireal')\nstack(\n  stack(\n    s(\"bd\").struct(\"<[x*<1 2> [~@3 x]] x>\"),\n    s(\"~ [rim, sd:<2 3>]\").room(\"<0 .2>\"),\n    n(\"[0 <1 3>]*<2!3 4>\").s(\"hh\"),\n    s(\"rd:<1!3 2>*2\").mask(\"<0 0 1 1>/16\").gain(.5)\n  ).bank('crate').mask(\"<[0 1] 1 1 1>/16\".early(.5)),\n  chords.offset(-1).voicing().s(\"gm_epiano1:1\").phaser(4).room(.5),\n  n(\"<0!3 1*2>\").set(chords).mode(\"root:g2\").voicing().s(\"gm_acoustic_bass\"),\n  chords.n(\"[0 <4 3 <2 5>>*2](<3 5>,8)\").anchor(\"D5\").voicing().segment(4)\n    .room(.75).shape(.3).delay(.25)\n    .fm(sine.range(3,8).slow(8))\n    .lpf(sine.range(500,1000).slow(8)).lpq(5)\n).late(\"[0 .01]*4\").late(\"[0 .01]*2\").size(4)",
      "description": "Full ambient composition with complex patterns",
      "category": "ambient",
      "author": "eddyflux",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs",
      "tags": ["ambient", "complete", "composition"]
    },
    {
      "name": "Broken Cut 1",
      "code": "// broken cut 1 by froos\nsamples('github:tidalcycles/dirt-samples')\nsetcps(1.25)\nnote(\"[c2 ~](3,8)*2,eb,g,bb,d\").s(\"sawtooth\")\n  .noise(0.3)\n  .lpf(perlin.range(800,2000).mul(0.6))\n  .lpenv(perlin.range(1,5)).lpa(.25).lpd(.1)\n  .add.mix(note(\"<0!3 [1 <4!3 12]>\"))\n  .vib(\"4:.2\")\n  .room(1).roomsize(4).slow(4)\n  .stack(\n    s(\"bd\").late(\"<0.01 .251>\"),\n    s(\"breaks165:1/2\").fit().chop(4).sometimesBy(.4, ply(\"2\"))\n      .gain(1.5).sometimes(mul(speed(\"1.05\"))).cut(1),\n    s(\"<whirl attack>?\").delay(\".8:.1:.8\").room(2).slow(8).cut(2)\n  ).reset(\"<x@30 [x*[8 [8 [16 32]]]]@2>\".late(2))",
      "description": "Experimental bass with breakbeat drums and effects",
      "category": "experimental",
      "author": "froos",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs",
      "tags": ["experimental", "bass", "breakbeat"]
    },
    {
      "name": "Acidic Tooth",
      "code": "// acidic tooth by eddyflux\nsetcps(1)\nstack(\n  note(\"[<g1 f1>/8](<3 5>,8)\")\n    .clip(perlin.range(.15,1.5))\n    .release(.1)\n    .s(\"sawtooth\")\n    .lpf(sine.range(400,800).slow(16))\n    .lpq(cosine.range(6,14).slow(3))\n    .lpenv(sine.mul(4).slow(4))\n    .lpd(.2).lpa(.02)\n    .ftype('24db')\n    .rarely(add(note(12)))\n    .room(.2).shape(.3).postgain(.5)\n    .superimpose(x=>x.add(note(12)).delay(.5).bpf(1000))\n    .gain(\"[.2 1@3]*2\"),\n  s(\"bd*2\").mask(\"<0@4 1@16>\"),\n  s(\"hh*8\").gain(saw.mul(saw.fast(2))).clip(sine).bank('RolandTR909')\n)",
      "description": "Acid bass with techno drums and sidechain",
      "category": "techno",
      "author": "eddyflux",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs",
      "tags": ["acid", "techno", "bass"]
    },
    {
      "name": "Amelie Waltz",
      "code": "setDefaultVoicings('legacy')\nstack(\n  n(\"[0@2 ~, ~ [[1,2,3] ~]!2]\")\n  .chord(\"<[Dm Am]!2 [F C]!2>/4\")\n  .anchor(\"<[B3 G3]!2 [C4 B3]!2>/4\")\n  .voicing().velocity(0.5)\n  ,\n  n(\"<[3@5.5 2@0.5 1@3 0@3] [3@3.5 [4 3 2 1 2]@2.5 1@3 0@3] [2@5.5 1@0.5 -3@6]!2>/4\")\n  .scale(\"a4:minor\")\n  \n).s(\"gm_harmonica\").lpf(4000).clip(1)\n  .attack(0.1).release(0.1)\n  .room(1.5)\n  .cpm(64).gain(.6)\n  .pianoroll()",
      "description": "Waltz inspired by Amelie soundtrack using harmonica and minor scale",
      "category": "classical",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["waltz", "classical", "soundtrack"]
    },
    {
      "name": "Disto",
      "code": "setcps(90/60)\ng: n(\"<[[0,4]]*3>\")\n  .scale(\"c#2:minor\").s(\"supersaw\").transpose(\"<0 2 [3 1]>/8\")\n  .lpa(0).lpe(10).lpd(0.2).lpr(1).lpf(\"<[10 10 100]>\").dist(\"8:0.18\")\ns: n(\"<[[5 ~]*3] 4 4b 3 [1 2 1] 0 [4 5 2] 4 >\")\n  .scale(\"c#4:minor\").transpose(\"<0 2 [3 1]>/8\")\n.s(\"supersaw\").lpf(500).dist(\"10:0.12\").room(0.2)\n  .mask(\"<0@3 1@4 >/8\").hush()\nd: \"[<bd*3 [~ bd bd] [sd ~ bd] [mt lt bd] [[sd,[~ sd@6]] sd mt] >,<oh!4 ~>,<cr>/5]\"\n  .pickOut({bd:s(\"EmuDrumulator_bd\").velocity(1).lpf(1000),\n           sd:s(\"EmuDrumulator_sd\").velocity(1),\n           oh:s(\"EmuDrumulator_oh\").pan(0.6).speed(0.7).velocity(0.2),\n           mt:s(\"EmuDrumulator_mt\").velocity(0.6),\n           lt:s(\"EmuDrumulator_lt\").velocity(0.6),\n           cr:s(\"SequentialCircuitsDrumtracks_cr\").speed(1.3).pan(0.4).velocity(0.5)})\n  .room(0.9).gain(0.5)\n  .mask(\"<0 1@5 0 1 >/8\")\n",
      "description": "Distorted synth with complex drum patterns",
      "category": "electronic",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["distortion", "synth", "drums"]
    },
    {
      "name": "Everso Closely",
      "code": "setCps(93.2/60*3/4/9)\nsetDefaultVoicings('legacy')\nconst epic = \"<D Dm Am D Gm C F Am A#>*9\";\nconst mels ={0:\"d4@2 a d4 g c4 f a d4\"\n            ,1:\"a@7 c4@3 d4@6 e4@2 c4@7 d4@2\"\n            ,2:\"a@7 e4 c4 [d4@3 e4]@2 f#4 ~ g4@2 [c4@3 d4]@2 e4 [c4@5 ~]@4 c5@2 ~ d5@2\"\n            ,3:\"a@2 f#4 f4@2 a ~ e4@2 d4@2 a ~ g4@2 c4@2 e4 ~ f4@2 c5@2 e4 ~ d4@2\"\n            ,4:\"a d4 f#4 [a4 e5 c5]@6 d5 a4 f#4 [a4 g4]@4 c5@3 a4 f4 [e4 c4]@4 d4@2\"\n            ,5:\"a d4 f#4 [a4 c5 a4]@6 d5 a4 f#4 [a4 g4]@4 c5@3 a4 f4 [e4 c4]@4 d4@2\"\n            ,6:\"f#4 f4 e4 f#4 g4 e4 f4 [a@2 c4] [[a#@3 c4]@2 d4]\"\n            ,7:\"[f#4 f4]@6 <e4 [e4 e4@2]>@3 [d4@3 e4]@2 f#4 [g4 a#4 c5 a4]@8 f4 e4 <[c5@2 ~ a#4@2] [c4@3 a#@2]>@5\"\n            ,8:\"[~@25 d4@29]/2\"\n            ,9:\"<0,1,2,3,4,5,6,7>*9\"}\nstack\n(\"<0 1 2 3 4 0 1 2 3 [4@26 ~] 0 1 2 3 [[4@25 ~@29],8]@2 >\".pickRestart(mels).sub(12).note().s(\"gm_overdriven_guitar\").gain(.8)\n,\"<~ ~ ~ ~ 5 5 6 7@2 [2@4 ~] 5 5 6 7 [[5@25 ~@29],8]@2>\".pickRestart(mels).note().s(\"gm_tenor_sax\").gain(.8).color(\"yellow\")\n,\"<1@14 [[4@25 ~@29],8]@2>\".pickRestart(mels).add(24).note().s(\"gm_ocarina\").gain(.3).color(\"red\")\n,\"<9@14 ~@2>\".pickRestart(mels).n().chord(epic).anchor(\"C4\").voicing().s(\"<gm_reed_organ@10 gm_church_organ:1@4 ~@2>\").gain(\"<.25@10 .45@4 ~@2>\").color(\"green\").midichan(3)\n,\"<0@14 [[4@25 ~@29],8]@2>\".pickRestart(mels).sub(24).note().s(\"gm_electric_bass_finger\").lpf(400).gain(.77).color(\"blue\")\n,\"<0 [0@2 1@2 0 2@4] 0!4 [0@2 1@2 0 2@4] 0!2 [0@26 ~] 0!2 [0@2 1@2 0 2@4] 0 3@2>\".pickRestart(\n  [\"<rd*3 , <<<bd!4 sd> sd> ~ bd>*3 , cr/9>*9\"\n  ,\"[[sd [bd,cr] ~]!2@3]*9/2\"\n  ,\"<[sd,[~ sd@10]] [[[bd,cr] ~]!2]@4 bd [sd,[~ sd@10]] mt lt >*9*3\"\n  ,\"< [<[sd,[~ sd@10]]!2 ~> <[bd,cr]!2 [sd,[~ sd@10]]> [bd,cr]!2 ~ [bd,cr] ~ [bd,cr,cr] ~]*3 ~*4 >\" \n  ]).pickOut({rd:s('rd').velocity(.12).hpf(9000).pan(.45),\n               bd:s('bd').velocity(.5).lpf(2500),\n                sd:s('sd').velocity(.5).hpf(200),\n                cr:s('cr').velocity(.1).pan(.55),\n                mt:s('mt').velocity(.3).pan(.6),\n                lt:s('lt').velocity(.3).pan(.7)\n}).bank(\"Linn9000\").speed(.95).gain(.7).color(\"cyan\").midichan(10) ).room(.8)\n ",
      "description": "Alternative track with guitar, sax, and drums",
      "category": "alternative",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["alternative", "rock", "multi-instrument"]
    },
    {
      "name": "Happy Birthday",
      "code": "setDefaultVoicings('legacy')\nconst chrds = \"F@3 C@6 F@6 Bb@3 F@2 C F@3\".slow(8);\nstack(\n\"[C4@3 C4] D4 C4 F4 E4@2 [C4@3 C4] D4 C4 G4 F4@2 [C4@3 C4] C5 A4 F4 E4 D4 [Bb4@3 Bb4] A4 F4 G4 F4@2\".slow(8).early(1/3).note().s(\"gm_harmonica\").gain(0.4).color('green'),\nchord(chrds).anchor(\"G4\").struct(\"x*3\").voicing().piano().gain(0.2).color('yellow'),\nn(\"2 ~ ~ 2 1 ~\").chord(chrds).anchor(chrds.rootNotes(2)).voicing().s(\"gm_electric_bass_finger\").lpf(190).gain(1).color('blue'),\ns(\"hh*3, <bd ~>, ~ ~ rim\").bank(\"KorgDDM110\").gain(0.2)\n              \n).cpm(120/4).room(0.3)//.pianoroll();\n",
      "description": "Traditional birthday song with harmonica melody",
      "category": "traditional",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["birthday", "traditional", "celebration"]
    },
    {
      "name": "Jitterbug",
      "code": "setDefaultVoicings('legacy')\nconst m1 = `f#4@3 d4@4 g4@6 g#4@4 f4@3 d#4@3 e4@4 c#4@6 b3@4 g#3@3 g#4@5 a4@4 f#4@3 d#4@3 f#4@4 g4@6 a4@4 a#4@6 d#4@3.9 ~@0.1 d#4@3`.slow(82/8);\nconst m2 = `f4@3 d4@4 d#4@5 e4@3 g4@4 e4@6 f#4@4 c4@2.9 ~@0.1 c4@3 g#3@4 a#3@4 b3@6 c#4@4 g4@6 a4@4 a#4@6 d#4@3.9 ~@0.1`.slow(73/8);\nconst m3 = `d#4@3 f#4@3.5 ~@0.5`.slow(7/8);\nconst m4 = `c#4@4 f#4@4 `.slow(8/8);\nconst m5 = `e4@4 g4@7.9 ~@0.1 f4@4 f#4@4.9 ~@0.1 d#4@3 e4@4 c#4@6.9 ~@0.1 f#4@2 f4@3.9 ~@0.1`.slow(41/8);\nconst melody = arrange([82/8,m1],[73/8,m2],[7/8,m3],[82/8,m1],[8/8,m4],[73/8,m2],[41/8,m5]);\nconst h1 = `D@2 G@2 C D#@2 G#@2 C# B@2 E@2 A F#m@2 B@2 G#@2 C#@2 A@2 D Cm@2 F#@2 D# Em@2 A@2 F# D#m@2 G#@2`.slow(40/4);\nconst h2 = `Cm F@2`.slow(3/4);\nconst h3 = `Bm@2 B@2 C@2 G@2 C A@2 D@2 Am C@2 G#@2 F#@2 E B@2 C#m@2 D# Em@2 A@2 F# D#m@2 G#@2`.slow(35/4);\nconst h4 = `Cm F#@2`.slow(3/4);\nconst h5 = `Cm F#@4 F@2`.slow(7/4);\nconst h6 = `C#m@2 D#@4 C#@2 F#@2 B@2 E@2 C#m@2 F#@2 A#@2`.slow(20/4);\nconst chords = arrange([40/4,h1],[3/4,h2],[35/4,h3],[3/4,h4],[40/4,h1],[7/4,h5],[35/4,h3],[20/4,h6]);\nstack(  \n n(stack(\"0\",\"1\".late(.1),\"2\".late(.2)).fast(4)).chord(chords).anchor(\"G5\").voicing().s(\"gm_pad_choir\").echo(2,1/6,.7).gain(0.8), \n chords.rootNotes(2).note().s(\"gm_lead_2_sawtooth\").attack(0.2).sustain(1.2).lpf(1000).gain(0.4),\n melody.note().s(\"gm_lead_1_square\").attack(0.02).sustain(1.5).lpf(1200).gain(0.75),\n s(\"<rd*4>\").bank('LinnDrum').gain(0.07)\n).cpm(115/4)\n.room(    slider(0.91,0,10))\n  .rsize(   slider(4,0,8,1))\n",
      "description": "Energetic alternative track with layered synths and effects",
      "category": "alternative",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["alternative", "energetic", "synth"]
    },
    {
      "name": "Mouth Breather",
      "code": "setcps(215/60*2)\nconst xposes = \"<0@9 -5 -7 0@4 ~ 0@2 -5 -7 ~@2>/48\"\ng:\"<0@5 1 0 1 0@3 ~@2 0 ~ 0@4 ~@2 >/48\".pickRestart(\n  [stack(\"<c3@9 c#3 c3@2>\",\"<g3 f3@2 g3@4 f3 g3 g#3 g3 f3>\".add(\"<0,5>\")).struct(\"<x!4 ~!2 x!9 x@3 x!6>\")\n  ,\"<[c3,g3,c4]@6 ~@42>\".add(-3).penv(-3).patt(1)\n  ]).note().transpose(xposes).s(\"gm_electric_guitar_clean:2\").distort(\"10:.17\").room(.1)\nb:\"<~@3 0@2 ~ 0 ~ 0@6 ~ 0@4 ~@2 >/48\".pickRestart([\"<c2!3 c2@2 ~ c2!3 <[c#2 f2 c#2] [c2 f2 g2]>@3>\"])\n  .note().transpose(xposes).s(\"gm_electric_bass_pick\").release(.06).distort(\"5:.3\").room(.2).color('green')\nd:\"<~ 0@14 ~ 0@6>/48\".pickRestart(\n  [stack(s(\"<bd ~ bd ~!2 bd!2 ~!2 bd ~!2 bd ~!2 bd ~ bd ~ bd ~!2 bd ~>\"),\n        s(\"<~!3 sd ~!6 sd ~!5 sd ~!3 sd ~!3>\").gain(1.4),\n        s(\"<oh>/2\").speed(1.03).gain(.3).pan(.4),\n        s(\"<cr>/12\").speed(1.1).gain(.2).pan(.6))])\n  .room(.8).color('cyan')\n// all((x)=>x.scope({scale:.05})) //._pianoroll({minMidi:10,maxMidi:60,autorange:false})\n",
      "description": "Punk rock track with distorted guitar and intense drums",
      "category": "punk",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["punk", "rock", "distorted"]
    },
    {
      "name": "Pyramid Song",
      "code": "setcps(104/60/4)\nconst split = register('split', (deflt, callback, pat) => callback(deflt.map((d,i)=> pat.withValue((v)=>{\n  const isobj = v.value !== undefined; const value = isobj ? v.value : v;\n  const result = Array.isArray(value)?(i<value.length?value[i]:d):(i==0?value:d);\n  return (i==0 && isobj) ? {...v,value:result} : result; })));\nlet chr = {X:\"f#2,c#3,a#3,c#4,f#4\", Y:\"g2,d3,b3,d4,f#4\", Z:\"a2,e3,a3,c#4,f#4\", J:\"g2,d3,b3,d4,g4\", K:\"f#2,c#3,a#3,c#4,g4\",\n           V:\"f#2,c#3,a3,c#4,f#4\", W:\"e2,b2,g#3,b3,f#4\"}\npiano: \"<[i1 i2 i3 i4] ooooh [v1 v2]!4 ooooh@2 [v1 v2]!3 [v1 v3] [v3 v2] [i1 i2 i3 i2] [i3 i2 i3 i2] end>/8\".pickRestart(\n {i1:`<[[X:.6 X:.8]@3 Y:.5@2 [Z:.5 Z:.5]@3]>/2`, i2: `<[[Z:.4 Y:.4]@3 Y:.3@2 [J:.6 J:.9]@3]>/2`, \n  i3:`<[[K:.8 X:.6]@3 Y:.5@2 [Z:.5 Z:.5]@3]>/2`, i4: `<[[Z:.4 Y:.4]@3 Y:.4@2 [Y:.4 Y:.7]@3]>/2`,\n  ooooh:`<[[X X]@3 Y@2 [Z Z]@3] [[Z Y]@3 Y@2 [X X]@3] [[X X]@3 Y@2 [Z Z]@3] [[Z Y]@3 Y@2 [Y Y]@3]>/2`,\n  v1:`<[[X X]@3 Y@2 [Z Z]@3] [[Z Y]@3 Y@2 [X X]@3]>/2`,\n  v2:`<[[V V]@3 W@2 [W W]@3] [[Y Y]@3 Y@2 [Y Y]@3]>/2`,\n  v3:`<[[V V]@3 W@2 [W W]@3] [[Y Y]@3 X@2 [X X]@3]>/2`,\n  end:`<X:1>/8`, \n }).split([0,.5],(x)=>x[0].pickOut(chr).velocity(x[1])).note().piano().gain(0.8).room(.6)\nooooh: \"<~ 0 ~@4 0@2 ~@8>/8\".pickRestart([\n  \"<f#5@11 e5:-2 g#5:4 e5:-4 [f#5:2 ~] [~ g#5 e5] f#5@4 g#5 f#5 e5 d5 c#5@5 ~@3>*4\"\n  ]).split([0,0],(x)=>x[0].penv(x[1])).patt(0.04).s(\"triangle\").attack(.08).release(.08).note().vmod(.1).vib(5).gain(0.3).lpf(2000).room(1.5)\ndrums: \"<~@6 [~@15 0@15 1@2] [2,3]@8 3>/8\".pick([\n  \"<[bd,rd] ~ [~ sf*3] [bd,rd] ~ [~ sf*3] [bd,rd] ~ ~ [~ sf*3] [bd,rd] ~ [~ sf*3] [bd,rd] ~ [~ sf*3]>*8\",\n  \"<[sd sf bd] [sf sd sd]>*4\",\n  \"<[rd*4],[<~ ~ ~ bd ~ bd ~ ~ bd ~ bd ~ ~ bd ~ bd> <~!14 sf!2> <~ sd bd ~ sd ~ sd bd ~ sd ~ ~ sd ~ sd sd>]*4>\",\n  \"<cr,bd>/8\",\n]).pickOut({\n  bd: s('bd').bank('Linn9000').lpf(1000),\n  sd: s('sd').bank('RolandMT32').velocity(.5),\n  sf: s('sd').bank('RolandMT32').velocity(.2),\n  rd: s('rd').bank('Linn9000').velocity(0.3).hpf(8000),\n  mt: s('mt').bank('RolandMT32'),\n  lt: s('lt').bank('RolandMT32'),\n  cr: s('cr').bank('Linn9000').speed(0.4).velocity(0.3).hpf(4000),\n}).room(.2).gain(0.5)\n",
      "description": "Alternative track with piano and vocal effects",
      "category": "alternative",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["alternative", "piano", "vocal"]
    },
    {
      "name": "Rhythm of the Night",
      "code": "// \"The Rhythm Of The Night\" - Work In Progress\n// song @by Corona\n// script @by eeefano\nsetDefaultVoicings('legacy')\nconst as = register('as', (mapping, pat) => { mapping = Array.isArray(mapping) ? mapping : [mapping];\n  return pat.fmap((v) => { v = Array.isArray(v) ? v : [v, 0];\n    return Object.fromEntries(mapping.map((prop, i) => [prop, v[i]])); }); });\n\nconst crdpart = \"<~ 0@10 1@24 0@19>\".pickRestart(\n[\"Ab Cm Bb F@2\".slow(5)\n,\"Bb@3 Ab@3 Cm@2\".slow(8)\n]);\nstack \n(\"<0 1@4 0 1@4 ~@8 2 3@7 2 3@7 0 1@4 0 1@4 0 1@4 0 1@4>\".pickRestart(\n  [\"~ [4@3 ~]!3 7:5 6 4 3\"\n  ,\"2:-1 0:-2 ~@4 6:1 4:-1 6 4:2 ~@4 [4:2 3]@3 ~@6 4 7:5 6 [4@2 ~] [3:-1 2@3]@2 0 ~@2\".slow(4)\n  ,\"~@6 [6 ~]!2\"\n  ,\"6 5@0.5 [5 ~] [4 ~]!2 [3 ~] 3:2@1.5 ~@7 6@2 6:2 [5 ~ ]!2 4 3@2 4 2 0:-2 ~@7 [0 2]@3 3@2 4 6:4 4:-4 ~ 0 2 0 4 ~ 0 0:2@2 ~@7\".slow(7)\n]).as(\"n:penv\").scale(\"c4:minor\").patt(\"0.07\").s(\"gm_lead_1_square\").room(0.4).delay(0.3).dfb(0.35).dt(60/128).gain(0.85)\n\n,crdpart.chord().anchor(\"F4\").voicing().s(\"gm_synth_strings_1\").color(\"blue\").gain(0.4)\n\n,\"<~@11 1@23 ~ 0@19>\".pickRestart(\n  [\"2 ~@2 2 ~@2 2 ~@3 2 ~@3 2 ~\"\n  ,\"[2 ~@2 2 ~@2 2 ~]!2\"\n]).n().chord(crdpart).anchor(crdpart.rootNotes(2)).voicing().s(\"gm_synth_bass_1\").lpf(1500).room(0.5).color(\"green\").gain(0.9)\n\n,\"<~@11 1@8 ~@16 0@19>\".pickRestart(\n  [\"<5 7 6 3!2> ~ 9 ~ 10 ~ ~ 12 ~ 11 ~ 10 ~ 11 9 ~\"\n  ,\"<6!3 5!3 7!2> ~ 9 ~ 10 ~ ~ 12 ~ 11 ~ 10 ~ 11 9 ~\"\n]).scale(\"c3:minor\").note().s(\"gm_lead_2_sawtooth\").room(0.3).delay(0.3).dfb(0.5).dt(60/128*2).color(\"red\").gain(0.6)\n\n,\"<[2,3] ~@10 0@6 [0,1]@2 [0,2] 0@5 [0,1]@2 [0,2] 0@6 [2,3] 0@8 [0,1]@2 [0,2] 0@8>\".pickRestart(\n [stack(s(\"bd*4\").gain(0.8),s(\"[~ oh]*4\").gain(0.14),s(\"hh*16\").gain(0.09),s(\"[~ cp]*2\").gain(0.4))\n ,s(\"[~ sd!3]!4 [sd*4]!4\").slow(2).gain(run(32).slow(2).mul(1/31).add(0.1).mul(0.4))\n ,s(\"cr\").gain(0.2)\n ,s(\"bd\").gain(0.8)\n ]).bank(\"RolandTR909\").room(0.2).color(\"yellow\").velocity(1)\n \n).cpm(128/4)\n",
      "description": "Dance track with synth leads and rhythms",
      "category": "dance",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["dance", "synth", "electronic"]
    },
    {
      "name": "Shedontusejelly",
      "code": "// \"She don't use jelly\" (work in progress)\n// composed @by The Flaming Lips\n// script @by eefano\nconst gString = register('gString', (n,tuning, pat) => \n  (pat.fmap((v) => { if(v[n]=='x') return note(0).velocity(0);\n      return note(v[n]+tuning[n]); } \n  ).innerJoin()));\nconst guitar = (strums,fingers,tuning=[40,45,50,55,59,64]) => (strums.pickOut(\n    [fingers.pickOut(fingering).gString(0,tuning),fingers.pickOut(fingering).gString(1,tuning),fingers.pickOut(fingering).gString(2,tuning)\n    ,fingers.pickOut(fingering).gString(3,tuning),fingers.pickOut(fingering).gString(4,tuning),fingers.pickOut(fingering).gString(5,tuning)]));\nconst split = register('split', (deflt, callback, pat) => callback(deflt.map((d,i)=> pat.withValue((v)=>{\n  const isobj = v.value !== undefined; const value = isobj ? v.value : v;\n  const result = Array.isArray(value)?(i<value.length?value[i]:d):(i==0?value:d);\n  return (i==0 && isobj) ? {...v,value:result} : result; }))));\n\nsetCps(86 / 60 )\nconst fingering = \n{D5:\"x:5:7:7:x:x\",G5:\"3:5:5:x:x:x\",A5:\"5:7:7:x:x:x\",\n D:\"10:12:12:11:10:10\",C:\"8:10:10:9:8:8\",G:\"3:5:5:4:3:3\",A:\"5:7:7:6:5:5\"\n};\nconst sk = 300, sh = silence, strumming = \n{d: stack(0,timeCat([1,sh],[sk,1]),timeCat([2,sh],[sk,2]),timeCat([3,sh],[sk,3]),timeCat([4,sh],[sk,4]),timeCat([5,sh],[sk,5]))\n,u: stack(5,timeCat([1,sh],[sk,4]),timeCat([2,sh],[sk,3]),timeCat([3,sh],[sk,2]),timeCat([4,sh],[sk,1]),timeCat([5,sh],[sk,0]))\n};\nconst song = \"<0 1@8 2>/4\"\n\nlead: song.pickRestart(\n  [\"<~ ~ ~ [~ c4:7:.5]>\"\n  ,\"<f#4 f#4*2 [a4:3:.1 f#4:-2:.1] [e4 f#4@2:3:.1 f#4]@2 f#4*2 [g4 f#4] [c#5:-2:.1 e4:2:1] >\"\n  ,\"<f#4 ~@3>\"\n  ]).as(\"note:penv:patt\").release(song.pickRestart([0,0,2]))\n  .s(\"gm_overdriven_guitar:11\").color('magenta').gain(.55).hpf(400).lpf(5000).pan(.5)\n\nrthm: song.pickRestart(\n  [\"~\"\n  ,\"<D5:d [D5:d D5:u] G5:d [G5:d A5:u@2 A5:d]@2 [G5:d G5:u] [A5:d A5:u] [G5:d ~]>\"\n  ,\"<D5:d ~@3>\"\n  ]).split([0,0],s=>guitar(s[1].pickRestart(strumming),s[0]).transpose(-12)\n  .release(song.pickRestart([.1,.1,2]))\n  .s(\"gm_overdriven_guitar:6\").color('cyan').hpf(700).lpf(6000)).gain(1.5).pan(.4)\n\nbass: song.pickRestart(\n  [\"~\"\n  ,note(\"<d2 d2*2 g1*2 [g1 a1@2 a1]@2 g1*2 a1*2 [g1 ~]>\")\n  ,\"~\"\n  ]).s(\"gm_electric_bass_finger\").color('green').lpf(500).dist(\"4:.25\")\n \ndrum: song.pickRestart(\n  [\"~\"\n  ,\"<cr,[hh!15 oh],[bd sd bd*2 [sd bd] [~ sd] [bd ~] [sd bd] [bd sd]]>/8\"\n  ,\"<cr,bd>/4\"\n]).pickOut({\n  bd:s('linndrum_bd').hpf(50).lpf(2000).velocity(.8),\n  sd:s('linndrum_sd').hpf(200).velocity(.7),\n  hh:s('linndrum_hh').hpf(7000).speed(1.5).velocity(.3),\n  oh:s('linndrum_oh').hpf(7000).speed(1.1).velocity(.3),\n  cr:s('linndrum_cr').hpf(7000).speed(1.2).velocity(.3),\n}).color('yellow').gain(1.2)\n\nall(x=>x.rsize(.8).room(1.3)\n  //  .ribbon(1*4,2*4)\n  )\n",
      "description": "Rock track with guitar and bass",
      "category": "rock",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["rock", "guitar", "alternative"]
    },
    {
      "name": "Stranger Things",
      "code": "setcps(0.7);\n\np1: n(\"0 2 4 6 7 6 4 2\")\n  .scale(\"<c3:major>/2\")\n  .s(\"supersaw\")\n  .distort(0.7)\n  .superimpose((x) => x.detune(\"<0.5>\"))\n  .lpenv(perlin.slow(3).range(1, 4))\n  .lpf(perlin.slow(2).range(100, 2000))\n  .gain(0.3);\np2: \"<a1 e2>/8\".clip(0.8).struct(\"x*8\").s(\"supersaw\").note();\n",
      "description": "Ambient soundtrack theme",
      "category": "ambient",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["ambient", "soundtrack", "synth"]
    },
    {
      "name": "Swim and Sleep",
      "code": "// \"Swim And Sleep Like A Shark\" (Work In Progress)\n// song @by Unknown Mortal Orchestra\n// script @by eefano\nsetCps(123/60)\nPattern.prototype.enumerate = function () {\n  const pat = this.sortHapsByPart()\n  return new Pattern(state => {\n    const haps = pat.query(state.withSpan(span => span.begin.wholeCycle()))\n    const chunks = haps.length\n    return haps.map((hap, i) => new Hap(hap.whole, hap.part.intersection(state.span), [hap.value, i, chunks])\n                  ).filter(hap => hap.part != undefined)\n  }).splitQueries()\n}\nPattern.prototype.warp = function (tpat) {\n  const pat = this;\n  return tpat.enumerate().withValue(v => pat.zoom(Fraction(v[1]).div(v[2]), \n                                                  Fraction(v[1]).add(1).div(v[2])) ).outerJoin()}\nfunction tablature(te,tB,tG,tD,tA,tE)\n  { return stack(te.add(64),tB.add(59),tG.add(55),tD.add(50),tA.add(45),tE.add(40)); }\n\nconst parts = \n{theme: tablature(\n\"~ ~ ~ ~  ~ ~ ~ ~ ~ ~ ~  ~ ~  ~ ~  ~  ~  ~ 11  ~\",\n\"9 ~ 9 ~ 10 9 7 ~ 9 6 ~ 10 ~ 10 ~ 12 14 14  ~ 13\",\n\"~ ~ ~ ~  ~ ~ ~ ~ ~ ~ 6  ~ ~  ~ ~  ~  ~  ~  ~  ~\",\n\"~ ~ ~ ~  ~ ~ ~ ~ ~ ~ ~  ~ ~  ~ ~  ~  ~  ~  ~  ~\",\n\"7 7 ~ 7  ~ 7 5 5 ~ 4 ~  9 9  ~ 9  ~  ~ 11  ~ 11\",\n\"~ ~ ~ ~  ~ ~ ~ ~ ~ ~ ~  ~ ~  ~ ~  ~  ~  ~  ~  ~\",\n).warp(\"t@2 t!4 [t!2]@4 t!2 [t!3]@6 t!4 t@2 t@3 t t@4\").slow(16)\n,arp1: tablature(\n\"~ ~ ~ 0 ~ ~ ~ 0 ~ ~ ~ 0\",\n\"~ ~ ~ ~ ~ ~ ~ ~ ~ 0 ~ ~\",\n\"~ 6 ~ ~ ~ 4 ~ ~ ~ ~ 2 ~\",\n\"~ ~ 6 ~ ~ ~ 4 ~ ~ ~ ~ ~\",\n\"4 ~ ~ ~ 2 ~ ~ ~ 0 ~ ~ ~\",\n\"~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\",).slow(6)\n,chords: tablature(\n\"~ ~ ~\",\n\"0 2 0\",\n\"1 2 1\",\n\"2 2 2\",\n\"2 0 2\",\n\"0 ~ 0\",).warp(\"t@3 t t@4\").slow(8)\n,arp2: tablature(\n\"~ ~ ~ 4 ~ ~ ~ ~ ~ 4 ~ ~ ~\",\n\"~ ~ 2 ~ 2 ~ ~ 4 ~ ~ 4 ~ ~\",\n\"~ 3 ~ ~ ~ 3 ~ ~ 4 ~ ~ 4 ~\",\n\"~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 4\",\n\"~ ~ ~ ~ ~ ~ 2 ~ ~ ~ ~ ~ ~\",\n\"2 ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~\",).warp(\"t!3 t@2 t t@2 t!6 t@2\").slow(8)\n,arp3: tablature(\n\"~ ~ ~ 0 ~ ~ ~ ~ ~ ~ 0 ~ ~ ~ ~\",\n\"~ ~ ~ ~ ~ ~ ~ ~ 0 ~ ~ 0 ~ ~ ~\",\n\"~ 4 ~ ~ 4 ~ ~ ~ ~ 2 ~ ~ 2 ~ ~\",\n\"~ ~ 4 ~ ~ 4 ~ ~ ~ ~ ~ ~ ~ ~ ~\",\n\"2 ~ ~ ~ ~ ~ 2 0 ~ ~ ~ ~ ~ 0 2\",\n\"~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ ~ 0\",).warp(\"t!3 t@2 t!11\").slow(8)\n,lick1: tablature(\n\" ~  ~  ~  ~ 17  ~\",\n\"17  ~ 17  ~  ~ 17\",\n\" ~  ~  ~  ~  ~  ~\",\n\" ~  ~  ~  ~  ~  ~\",\n\"16 16  ~ 16  ~  ~\",\n\" ~  ~  ~  ~  ~  ~\",).warp(\"t@2 t!4 t@2\").slow(4)\n,lick2: tablature(\n\" ~  ~  ~  ~ 16  ~\",\n\"16  ~ 16  ~  ~ 16\",\n\" ~  ~  ~  ~  ~  ~\",\n\" ~  ~  ~  ~  ~  ~\",\n\"14 14  ~ 14  ~  ~\",\n\" ~  ~  ~  ~  ~  ~\",).warp(\"t@2 t!4 t@2\").slow(4)\n,coda: tablature(\n\"~ ~ ~ ~  ~  ~  ~ ~\",\n\"7 5 7 9 10 10 12 9\",\n\"~ ~ ~ ~  ~  ~  ~ ~\",\n\"~ ~ ~ ~  ~  ~  ~ ~\",\n\"5 4 5 7  9  9 11 7\",\n\"~ ~ ~ ~  ~  ~  ~ ~\",).warp(\"t@3 t!3 t@2 t@3 t t@4\").slow(8)\n}; // end of parts\n\nconst split = register('split', (deflt, callback, pat) => \n  callback(deflt.map((d,i)=>pat.withValue((v)=>Array.isArray(v)?(i<v.length?v[i]:d):(i==0?v:d)))));\n\nstack(\n  \"<~@2 intro@16 verse@66 intro@16 verse@66 intro@16 solo@32 verse@66 intro@16 solo@32 ~@4>\".pickRestart(\n  {intro: \"<theme@16>\", \n   verse: \"<arp1@6 chords@8 arp2@8 arp1@6 chords@8 arp1@6 chords@8 arp3@8 chords@8>\",\n   solo: \"<lick1 lick2 lick2:-2 lick1:-5 lick1:-7 lick2:-7 coda@2>/4\"}).split([0,0],(x)=>x[0].pickRestart(parts).transpose(x[1]))\n  .note().s(\"gm_electric_guitar_jazz:0\").clip(1).release(0.4).gain(0.6).color('yellow'),\n\n  \"<~@2 ~@16 0@66 ~@16 0@66 ~@48 0@66 ~@48 ~@4>\".pickRestart([\n    `<7@2 9 7 6@2 8@2 5@2 7@2 7@2 6 5 4@2 2@6 ~@2 \n    4@2 4b@5 4 5 6 4@5 4 6@2 7@4 6@4 5@3 4 2@6 ~@8\n    8@2 9@4 8@4 7@4 7@6 ~@7\n    5@3 [4@4 5 4]@8 [3 4 5 7 5 3]@8 2@6 ~@10>*2`]).scale(\"e:major\").transpose(12)\n  .note().s(\"gm_ocarina\").gain(0.6).color('green'),\n  \n  \"<0@2 1@16 1@66 1@16 1@66 1@48 1@66 1@48 ~@4>\".pickRestart([\n    \"<mt sd*4 sd lt>*2\",\n    \"<bd ~ bd*2 bd*2>,sd,hh*2\"])\n  .s().bank(\"Linn9000\").clip(1).gain(0.08).color('cyan')  \n).room(0.3)",
      "description": "Complex multi-instrument track",
      "category": "experimental",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["experimental", "guitar", "multi-instrument"]
    },
    {
      "name": "Vermin Mangle",
      "code": "// \"Vermin Mangle\" (work in progress)\n// song @by Tim Smith (Cardiacs)\n// script @by eefano\nsetcps(52 / 60)\nconst song = `< i@8 j@27 >`\nconst melody = {\n  i: \"<f#4 ~ c#5@3 ~ a#4@2 g#4 ~ f#4 ~ a4@2 g#4 ~ f#4 ~ e4 ~ d4@2 ~@2 >*6\",\n  j: `<f#5@2 [e5@2 c#5] c#5 [f#4 a#4 c#5] [f#5@2 g#5] g#5 a5 [c#5@2 f#5 f#5@2 f#5] f#5 e5\n       [c#5 b4 a#4 f#4] f#4 g#4 [c#4@3 a#4 e5@2] [d5 c#5 b4] [b4 a4 g4] f#4!2 g#4 [c#4@2 f#4] f#4@2 ~@100>`,\n}\nconst ch0rds = {\n  i: \"<F#@2 E7@2>\",\n  j: \"<F#@2 E7@2 F#@2 E D F# D E F# B E F# E G D B E F# D E F#@2 E@2>\",\n}\n\n$: note(song.pickRestart(melody)).clip(.98)\n  .apply(song.pickRestart(\n    { i: x=>x.s(\"gm_trumpet\").pan(.3).gain(.6),\n      j: x=>x.s(\"gm_vibraphone:4\").vib(10).vibmod(.09).delay(.4).dt(.2).dfb(.10).gain(.7).dec(2)\n    }))\n     \n$: chord(song.pickRestart(ch0rds)).anchor('E4').voicing()\n  .layer(x=>x.s(\"gm_accordion:2\").struct(\"[~ x x]\").clip(.6).pan(.40).gain(.4),\n         x=>x.transpose(12).s(\"gm_string_ensemble_2:2\").pan(.5).gain(.4))\n\n$: n(\"[0 ~ ~]\").chord(song.pickRestart(ch0rds)).mode('root').anchor('f#2').voicing()\n  .s(\"gm_tuba:3\").gain(1)\n\n$: s(\"bassdrum2:2,tambourine:0\").clip(1.5).gain(1.5)\n\nall(x => x.room(.8))\n",
      "description": "Experimental electronic piece",
      "category": "experimental",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["experimental", "eclectic", "brass"]
    },
    {
      "name": "Vine",
      "code": "// \"Vine\" (work in progress)\n// composed @by Tim Smith of Spratleys Japs\n// script @by eefano\nsetCps(143 / 60 / 4)\nconst song = \"<0@8 1@28 2@24 3@24 1@25 1@28 2@36 3@24 4@16 5@12 6@66 7@66 8@66 ~@8>*4\"\nconst chordseq = song.pickRestart([\"~\",\n\"<C@3 G# C# Cm G# C# Cm B F# A@3>*2\", // verse\n\"<E B C# G# A# F>*2\", // chorus\n\"<G# C@2>/2\", \"~\", // post-chorus\n\"<E@4 C@2 A#@3 D@4 C@2 G#@5 D@4>*8\", // interlude\n\"<Dm@9 G@5 A@5 G@4 A@6 Dm@4 G@10 A@5 G@3 A@4 G@5 Dm@13 G@7 A@5 G@7 A@4 G@4 Dm@7 G@9 A@4 G@5 A@3 G@4>*8\", //snare      \n\"<Dm@9 G@5 A@5 G@4 A@6 Dm@4 G@9 A@6 G@3 A@4 G@5 Dm@13 G@7 A@5 G@7 A@4 G@4 Dm@7 G@9 A@4 G@5 A@3 G@4>*8\", //handclaps\n\"<Dm@9 G@6 A@5 G@4 A@6 Dm@4 G@9 A@6 G@3 A@4 G@5 Dm@13 G@7 A@5 G@7 A@4 G@4 Dm@7 G@9 A@4 G@5 A@3 G@3>*8\"]); //triangle\n\nvoice: song.pickRestart([\"~\",\n  note(\"<c4*2 c4 [a#3 c4] c4@2 ~ c4*2 d#4 f4 ~ d#4*2!2 d#4 c4 g#4 ~ g4 ~ [f#4 f4] [d#4 c#4] a#3 ~ [e4 d#4] e4 [e4 f#4] g#4@2 g#4>*4\"),\n  note(\"<[g#4@2 ~ f#4] [f#4@2 ~ f4] [f4@2 ~ d#4] [d#4@2 ~ d4] [d4@2 ~ c4] [c4 a4@3]>*2\").gain(1.4),\n  \"~\"\n]).s('gm_oboe').clip(.95).color('yellow')\n\nbass: n(song.pickRestart([\"~\",\"0*4\",\"[0@2 ~ 0]*2\",\"0*8\"])).chord(chordseq).mode(\"root:e2\").voicing()\n  .s(\"gm_electric_bass_pick\").clip(.90).lpf(300).gain(1).color('green')\nguitar: n(song.pickRestart([\"~\",\"[0,2,3]*2\",\"[[0,2,3]@3 [0,2,3]]*2\",\"~\"])).chord(chordseq).mode(\"root:e3\").voicing()\n  .s(song.pick([\"~\",\"gm_acoustic_guitar_steel:2\",\"gm_overdriven_guitar:2\",\"~\"])).color('red')\norgan: n(song.pick([\"~\",\"~\",\"~\",\"~\",\"[2 1]*4\"])).anchor(\"g5\").chord(chordseq).voicing()\n  .s(\"sawtooth\").clip(.6).color('cyan')\n\ndrums: song.pickRestart([\n  \"<hh*4,[<bd bd*2> sd]>*2\",\n  \"<hh*4,[bd sd]>*2\",\n  \"<hh*4,[bd sd]>*2\",\n  \"~\",\"<sl*4>\",\"<sl*4>\",\n  \"<hh*4,[<bd bd*2> sd]>*2\",\n  \"<hh*4,[<bd bd*2> [sd,cp]]>*2\",\n  \"<hh*4,tr*2,[<bd bd*2> [sd,cp]]>*2\",\n]).pickOut({\n  bd:s('linndrum_bd').lpf(3000).room(.2).velocity(.8),\n  sd:s('linndrum_sd').room(.2).velocity(.65),\n  hh:s('linndrum_hh').hpf(7000).speed(1.5).velocity(.3),\n  oh:s('linndrum_oh'),\n  sl:s('sleighbells'),\n  tr:s('anvil').speed(1.15).velocity(30),\n  cp:s('cp')\n})\n\nall(x=>x.room(.1)\n   // .ribbon(2*4,1*8)\n  )\n",
      "description": "Funky groove with multiple layers",
      "category": "funk",
      "author": "eefano",
      "license": "CC BY-NC-SA 4.0",
      "source": "strudel-songs-collection",
      "tags": ["funk", "groove", "multi-instrument"]
    }
  ],
  "creativity_tips": [
    "Use .sometimes() to add randomness to patterns",
    "Layer patterns with stack() for richer textures",
    "Try different scales with .scale() for melodic variety",
    "Use euclidean rhythms for interesting timing",
    "Experiment with effects like .room(), .delay(), .lpf()",
    "Combine samples and synths for hybrid sounds",
    "Use .every() to create pattern variations",
    "Try polymetric patterns for complex rhythms",
    "Use .off() to create syncopated patterns",
    "Experiment with .jux() for stereo effects",
    "Use .chop() to create glitchy textures",
    "Try .rev() to reverse patterns",
    "Use .fast() and .slow() to change tempo",
    "Experiment with .gain() and .pan() for dynamics",
    "Use .add() to layer sounds",
    "Try .mask() to selectively play patterns",
    "Use .superimpose() for complex layering",
    "Experiment with .rarely() for sparse patterns",
    "Use .often() for frequent variations",
    "Try .whenmod() for conditional patterns",
    "Use .struct() for complex pattern structures",
    "Experiment with .fit() for time stretching",
    "Use .chunk() for pattern segmentation",
    "Try .ply() for polyrhythmic patterns",
    "Use .segment() for pattern slicing",
    "Experiment with .clip() for pattern truncation",
    "Use .early() and .late() for timing shifts",
    "Try .reset() for pattern resets",
    "Use .jux() for stereo manipulation",
    "Experiment with .iter() for iterative patterns"
  ],
  "metadata": {
    "version": "1.1.0",
    "lastUpdated": "2024-01-16T00:00:00Z",
    "totalExamples": 98,
    "categories": [
      "technique", "ambient", "techno", "jazz", "classical", "rock", "experimental",
      "electronic", "house", "breakbeat", "minimal", "jungle", "idm", "trance",
      "dnb", "acid", "future", "trap", "progressive", "breakcore", "chillout",
      "neurofunk", "liquid", "hardcore", "downtempo", "psytrance", "deep", "funk",
      "garage", "grime", "dub", "reggae", "ska", "disco", "soul",
      "blues", "country", "folk", "world", "cinematic", "game", "chiptune",
      "synthwave", "vaporwave", "lofi", "bedroom", "indie", "postrock",
      "shoegaze", "dreampop", "noise", "drone", "field", "microsound",
      "plunderphonics", "concrete", "spectral", "stochastic", "algorithmic",
      "interactive", "generative", "livecoding", "collaborative", "educational",
      "workshop", "community"
    ],
    "authors": [
      "strudel-core", "strudel-community", "eddyflux", "froos"
    ],
    "licenses": [
      "MIT", "CC BY-NC-SA 4.0"
    ],
    "sources": [
      "strudel-docs", "community", "strudel-songs"
    ]
  }
}
