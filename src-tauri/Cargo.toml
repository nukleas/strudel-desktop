[workspace]
members = [".", "src/crates/*"]

[workspace.package]
version = "0.1.0"
edition = "2021"
license = "AGPL-3.0"
authors = ["nukleas"]
repository = "https://github.com/nukleas/strudel-desktop"

[workspace.dependencies]
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
anyhow = "1.0"
thiserror = "1.0"
clap = { version = "4", features = ["derive"] }
logos = "0.14"
midly = "0.5"
proptest = "1.4"

[package]
name = "app"
version = "0.1.0"
description = "Strudel Desktop - Live coding music patterns"
authors = ["nukleas"]
license = "AGPL-3.0"
repository = "https://github.com/nukleas/strudel-desktop"
default-run = "app"
edition = "2021"
rust-version = "1.60"

[lib]
name = "app_lib"
path = "src/lib.rs"

[[bin]]
name = "generate_embeddings"
path = "bin/generate_embeddings.rs"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[build-dependencies]
tauri-build = { version = "2.0", features = [] }

[dependencies]
serde_json = "1.0"
serde = { version = "1.0", features = ["derive"] }
tauri = { version = "2.0", features = [] }
midir = "0.9.1"
tokio = { version = "1.29.0", features = ["full"] }
rosc = "0.10.1"
tauri-plugin-clipboard-manager = "2"
futures = "0.3"
tauri-plugin-fs = "2"
tauri-plugin-dialog = "2"
genai = "0.1.15"
anyhow = "1.0"
chrono = "0.4"
tauri-plugin-store = "2"
regex = "1.9.6"
async-trait = "0.1"
schemars = "0.9"
thiserror = "1.0"
tauri-plugin-devtools = "2"
rig = { package = "rig-core", version = "0.21" }

# Audio export dependencies
hound = "3.5"
mp3lame-encoder = "0.2"

# Strudel Rust crates
strudel-core = { path = "src/crates/strudel-core" }
strudel-mini = { path = "src/crates/strudel-mini" }
strudel-audio = { path = "src/crates/strudel-audio" }
midi-to-strudel = { path = "src/crates/midi-to-strudel" }

# MIDI parsing for import feature
midly = { workspace = true }

# RAG (Retrieval-Augmented Generation) dependencies
# Using pre-computed embeddings + in-memory search for offline capability
# No heavy ML dependencies - embeddings generated at build time

[features]
# this feature is used for production builds or when `devPath` points to the filesystem and the built-in dev server is disabled.
# If you use cargo directly instead of tauri's cli you can use this feature flag to switch between tauri's `dev` and `build` modes.
# DO NOT REMOVE!!
custom-protocol = ["tauri/custom-protocol"]

[profile.release]
panic = "abort"
codegen-units = 1
lto = true
opt-level = "s"
